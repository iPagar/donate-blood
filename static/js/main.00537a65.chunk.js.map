{"version":3,"sources":["services/DataManager.js","services/Database.js","services/Geocode.js","components/StationsListCell.js","services/Distance.js","panels/StationsList.js","panels/StationsMap.js","components/Topic.js","panels/AboutDonation.js","components/PopupView.js","panels/FindStations.js","components/FindCityCell.js","panels/FindCity.js","panels/Station.js","App.js","index.js"],"names":["DataManager","mapState","sessionStorage","setItem","JSON","stringify","parse","getItem","search","city","this","setSearch","setMapState","userCity","lat","long","geo","Number","station","stations","Database","cityId","id","request","fetch","response","json","results","filter","title","toLowerCase","indexOf","cities","length","concat","replace","trim","_callee","apiKey","cityTitle","regenerator_default","a","wrap","_context","prev","next","Api","ApiYandex","sent","GeoObjectCollection","featureMember","GeoObject","name","abrupt","stop","_callee2","address","geoData","_context2","Point","pos","substr","split","_callee3","oblast","request1","response1","json1","cityTitle1","_context3","metaDataProperty","GeocoderMetaData","AddressDetails","Country","AdministrativeArea","AdministrativeAreaName","state","Geocode","geoToCity","addressToGeo","getProvincyCenter","StationsListCell","dist","props","data","Math","round","toFixed","react_default","createElement","style","display","justifyContent","alignContent","alignItems","lineHeight","chevron_default","className","_this","es6","multiline","description","asideContent","showLength","onClick","size","React","Component","deg2rad","degrees","PI","Distance","getDistance","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","c","atan2","sqrt","osname","platform","StationsList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","setState","currentTarget","value","promoBannerProps","_this2","left","history","push","settings_default","Loc","FindStationsTitle","_this3","listStations","map","apply","toConsumableArray","lng","sort","b","i","components_StationsListCell","key","Fragment","onChange","maxLength","bannerData","align","IOS","NothingFindText","NothingFindTextAndroid","_this4","bridge","send","then","getSearch","flexDirection","marginTop","popout","activePanel","showPanelHeader","showStations","StationsMap","geoSubscribe","_ref","asyncToGenerator","mark","e","t0","detail","type","available","setGeo","getGeo","setUserCity","userGeo","isPanning","panTo","actions","autoclose","onClose","_x","arguments","onClickPanelHeaderButton","VKConnect","subscribe","setMapRef","_isMounted","mapOnLoad","isLoadingMap","styleMap","flexGrow","width","zoom","isLoading","locate_default","react_yandex_maps_umd_production_min","geometry","options","iconLayout","iconImageHref","iconImageSize","iconImageOffset","Stations","_this$state","center","showSpinner","defaultState","defaultOptions","yandexMapDisablePoiInteractivity","suppressMapOpenBlock","instanceRef","onLoad","preset","clusterIconColor","groupByCoordinates","useMapMargin","gridSize","margin","hasBalloon","hasHint","zoomMargin","iconColor","actualMapState","getMapState","getCity","getUserCity","getCenter","getZoom","position","top","bottom","right","unsubscribe","setMap","setPlacemarks","centered","showMap","Topic","visibleText","icon","dropdown_default","text","handleTitleClick","transform","textData","showText","About","topics","Topics","topic","components_Topic","SettingsAboutTitle","showTopics","PopupView","isActive","popupBlock","createRef","_this$props","children","ref","current","classList","remove","add","cancel_default","FindStations","onStoryChange","activeStory","dataset","story","showTabbar","selected","data-story","styleTabButton","search_default","place_default","help_outline_default","setStations","getStations","setCity","openEmptySheet","GetGeoError","setStation","popupError","subToPublic","VKConnectPromise","group_id","popupSuccess","action","actionsLayout","showPopupView","components_PopupView","app_id","scope","token","access_token","method","params","add_to_news","link_url","v","resp","url","upload_url","catch","src","alt","border","activeView","buttonRef","getCities","EmptySheetTitle","EmptySheetActionTitle","clearTimeout","timeToShow","location","slice","loadPopupView","tabbar","panels_StationsList","panels_StationsMap","AboutDonation","FindCityCell","region","FindCity","console","log","updateCities","onCellClick","_ref2","necessarily","goBack","_x2","listCities","components_FindCityCell","headerButton","back_default","noShadow","FindCityTitle","showSearch","showCities","Station","height","getStation","StationTitle","site","before","globe_default","href","includes","target","email","worktime","recent_default","tels","phones","findNumbers","v2","tel","number","formatNational","phone_default","level","whiteSpace","_24_place_default","showAddress","showWorkTime","showTel","showSite","showInfo","App","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","setInitialView","getTheme","pathname","Route","component","render","panels_FindCity","withRouter","connect","ReactDOM","HashRouter","src_App","getElementById"],"mappings":"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","file":"static/js/main.00537a65.chunk.js","sourcesContent":["class DataManager {\r\n  static setMapState(mapState) {\r\n    sessionStorage.setItem(\"mapState\", JSON.stringify(mapState));\r\n  }\r\n\r\n  static getMapState() {\r\n    const mapState = JSON.parse(sessionStorage.getItem(\"mapState\"));\r\n\r\n    return mapState;\r\n  }\r\n\r\n  static setSearch(search) {\r\n    sessionStorage.setItem(\"search\", JSON.stringify(search));\r\n  }\r\n\r\n  static getSearch() {\r\n    const search = JSON.parse(sessionStorage.getItem(\"search\"));\r\n\r\n    return search;\r\n  }\r\n\r\n  static async setCity(city) {\r\n    sessionStorage.setItem(\"city\", JSON.stringify(city));\r\n\r\n    this.setSearch(\"\");\r\n    this.setMapState(null);\r\n  }\r\n\r\n  static getCity() {\r\n    const city = JSON.parse(sessionStorage.getItem(\"city\"));\r\n\r\n    return city;\r\n  }\r\n\r\n  static setUserCity(userCity) {\r\n    sessionStorage.setItem(\"userCity\", JSON.stringify(userCity));\r\n  }\r\n\r\n  static getUserCity() {\r\n    const userCity = JSON.parse(sessionStorage.getItem(\"userCity\"));\r\n\r\n    return userCity;\r\n  }\r\n\r\n  static setGeo(lat, long) {\r\n    const geo = JSON.stringify([Number(lat), Number(long)]);\r\n\r\n    sessionStorage.setItem(\"geo\", geo);\r\n  }\r\n\r\n  static getGeo() {\r\n    const geo = JSON.parse(sessionStorage.getItem(\"geo\"));\r\n\r\n    return geo;\r\n  }\r\n\r\n  static setStation(station) {\r\n    sessionStorage.setItem(\"station\", JSON.stringify(station));\r\n  }\r\n\r\n  static getStation() {\r\n    const station = JSON.parse(sessionStorage.getItem(\"station\"));\r\n\r\n    return station;\r\n  }\r\n\r\n  static setStations(stations) {\r\n    sessionStorage.setItem(\"stations\", JSON.stringify(stations));\r\n  }\r\n\r\n  static getStations() {\r\n    const stations = JSON.parse(sessionStorage.getItem(\"stations\"));\r\n\r\n    return stations;\r\n  }\r\n}\r\n\r\nexport default DataManager;\r\n","// import Api from \"../configs/Api.json\";\r\n\r\nclass Database {\r\n    static async getStations(city) {\r\n        let stations = {};\r\n        const cityId = city.id;\r\n        // const wrapAPIKey = Api.wrapAPIKey;\r\n        // const request = `https://wrapapi.com/use/iPagar/blood/stations/latest?city_id=${cityId}&wrapAPIKey=${wrapAPIKey}`;\r\n        const request = `https://api2.donorsearch.org/api/blood_stations/?closed=false&city_id=${cityId}`;\r\n\r\n        const response = await fetch(request);\r\n        const json = await response.json();\r\n\r\n        stations = json.results;\r\n\r\n        stations = stations.filter(\r\n            (station) =>\r\n                !(\r\n                    station.title.toLowerCase().indexOf(\"закрыта\") !== -1 ||\r\n                    station.title.toLowerCase().indexOf(\"закрыто\") !== -1\r\n                )\r\n        );\r\n\r\n        // stations = await Promise.all(\r\n        //     stations.map(async station => {\r\n        //         if (station.address.search(/;/g) !== -1)\r\n        //             station.address = station.address\r\n        //                 .split(\"\")\r\n        //                 .reverse()\r\n        //                 .join(\"\")\r\n        //                 .split(\";\")[0]\r\n        //                 .split(\"\")\r\n        //                 .reverse()\r\n        //                 .join(\"\");\r\n\r\n        //         let geo;\r\n        //         if (city.country.title === \"Россия\") {\r\n        //             geo = await (await fetch(\r\n        //                 `https://cors.io/?http://search.maps.sputnik.ru/search/addr?q=${(city\r\n        //                     .country.title,\r\n        //                 city.title)}`\r\n        //             )).json();\r\n\r\n        //             if (geo.result.address) {\r\n        //                 let lat =\r\n        //                     geo.result.address[0].features[0].geometry\r\n        //                         .geometries[0].coordinates[1];\r\n        //                 let lng =\r\n        //                     geo.result.address[0].features[0].geometry\r\n        //                         .geometries[0].coordinates[0];\r\n\r\n        //                 if (\r\n        //                     Distance.getDistance(\r\n        //                         lat,\r\n        //                         lng,\r\n        //                         station.lat,\r\n        //                         station.lng\r\n        //                     ) < 1\r\n        //                 ) {\r\n        //                     geo = await (await fetch(\r\n        //                         `https://cors.io/?http://search.maps.sputnik.ru/search/addr?q=${\r\n        //                             city.country.title\r\n        //                         },${city.title},${station.address}`\r\n        //                     )).json();\r\n        //                     lat =\r\n        //                         geo.result.address[0].features[0].geometry\r\n        //                             .geometries[0].coordinates[1];\r\n        //                     lng =\r\n        //                         geo.result.address[0].features[0].geometry\r\n        //                             .geometries[0].coordinates[0];\r\n        //                     station.lat = lat;\r\n        //                     station.lng = lng;\r\n        //                 }\r\n        //             }\r\n        //         } else {\r\n        //             geo = await Geocode.addressToGeo(\r\n        //                 city.country.title + \",\" + city.title\r\n        //             );\r\n\r\n        //             if (\r\n        //                 Distance.getDistance(\r\n        //                     geo[0],\r\n        //                     geo[1],\r\n        //                     station.lat,\r\n        //                     station.lng\r\n        //                 ) < 0.25\r\n        //             ) {\r\n        //                 geo = await Geocode.addressToGeo(\r\n        //                     city.country.title +\r\n        //                         \",\" +\r\n        //                         city.title +\r\n        //                         \",\" +\r\n        //                         station.address\r\n        //                 );\r\n\r\n        //                 station.lat = geo[0];\r\n        //                 station.lng = geo[1];\r\n        //             }\r\n        //         }\r\n\r\n        //         return station;\r\n        //     })\r\n        // );\r\n\r\n        return stations;\r\n    }\r\n\r\n    static async getCities(title) {\r\n        let cities = {};\r\n        // const wrapAPIKey = Api.wrapAPIKey;\r\n        // const request = `https://wrapapi.com/use/iPagar/blood/cities/latest?title=${title\r\n        //     .replace(/^[A-Za-z0-9]+$/, \"\")\r\n        //     .trim()}&wrapAPIKey=${wrapAPIKey}`;\r\n        const request =\r\n            title.length > 0\r\n                ? `https://api2.donorsearch.org/api/blood_stations/search/?format=json&q=${title\r\n                      .replace(/^[A-Za-z0-9]+$/, \"\")\r\n                      .trim()}`\r\n                : `https://api2.donorsearch.org/api/cities/?page=1&format=json`;\r\n\r\n        const response = await fetch(request);\r\n        const json = await response.json();\r\n\r\n        cities = json ? (title.length > 0 ? json.cities : json.results) : [];\r\n        return cities;\r\n    }\r\n}\r\n\r\nexport default Database;\r\n","import Api from \"../configs/Api.json\";\r\n\r\nasync function geoToCity(geo) {\r\n  const apiKey = Api.ApiYandex;\r\n  const kind = \"locality\";\r\n  const format = \"json\";\r\n  const sco = \"latlong\";\r\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&sco=${sco}&results=1&format=${format}&kind=${kind}&geocode=${geo}`;\r\n\r\n  const response = await fetch(request);\r\n  const json = await response.json();\r\n\r\n  const cityTitle =\r\n    json.response.GeoObjectCollection.featureMember[0].GeoObject.name;\r\n  return cityTitle;\r\n}\r\n\r\nasync function addressToGeo(address) {\r\n  const apiKey = Api.ApiYandex;\r\n  const format = \"json\";\r\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&results=1&format=${format}&geocode=${address}`;\r\n\r\n  const response = await fetch(request);\r\n  const json = await response.json();\r\n\r\n  const geoData = json.response.GeoObjectCollection.featureMember[0]\r\n    ? JSON.stringify(\r\n        json.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos\r\n      )\r\n        .substr(1, 17)\r\n        .split(\" \")\r\n    : null;\r\n\r\n  const geo = geoData ? [geoData[1], geoData[0]] : null;\r\n\r\n  return geo;\r\n}\r\n\r\nasync function getProvincyCenter(geo) {\r\n  const apiKey = Api.ApiYandex;\r\n  const kind = \"locality\";\r\n  const format = \"json\";\r\n  const sco = \"latlong\";\r\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&sco=${sco}&results=1&format=${format}&kind=${kind}&geocode=${geo}`;\r\n\r\n  const response = await fetch(request);\r\n  const json = await response.json();\r\n\r\n  const oblast =\r\n    json.response.GeoObjectCollection.featureMember[0].GeoObject\r\n      .metaDataProperty.GeocoderMetaData.AddressDetails.Country\r\n      .AdministrativeArea.AdministrativeAreaName;\r\n\r\n  const request1 = `https://nominatim.openstreetmap.org/search?q=${oblast}&polygon=1&addressdetails=1&format=jsonv2`;\r\n\r\n  const response1 = await fetch(request1);\r\n  const json1 = await response1.json();\r\n  const cityTitle1 = json1[1].address.state;\r\n\r\n  return cityTitle1;\r\n}\r\n\r\nexport default { geoToCity, addressToGeo, getProvincyCenter };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Cell } from \"@vkontakte/vkui\";\r\n\r\nimport Icon24Chevron from \"@vkontakte/icons/dist/24/chevron\";\r\n\r\nconst maxDist = 100;\r\n\r\nclass StationsListCell extends React.Component {\r\n  showLength() {\r\n    let dist = this.props.data.dist;\r\n    if (dist < 1) {\r\n      dist = dist * 1000 + \" м\";\r\n    } else dist = Math.round(dist).toFixed() + \" км\";\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignContent: \"space-between\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        {this.props.data.dist <= maxDist && (\r\n          <div style={{ lineHeight: \"24px\" }}>{dist}</div>\r\n        )}\r\n        <Icon24Chevron\r\n          className=\"Cell__chevron\"\r\n          style={{ display: \"inline-block\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Cell\r\n        multiline\r\n        description={this.props.data.address}\r\n        asideContent={this.showLength()}\r\n        onClick={() => this.props.city(this.props.data)}\r\n        size=\"l\"\r\n      >\r\n        <b>{this.props.data.title}</b>\r\n      </Cell>\r\n    );\r\n  }\r\n}\r\n\r\nStationsListCell.propTypes = {\r\n  data: PropTypes.shape({\r\n    address: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nexport default StationsListCell;\r\n","function getDistance(lat1, lon1, lat2, lon2) {\r\n  var R = 6371;\r\n  var dLat = deg2rad(lat2 - lat1);\r\n  var dLon = deg2rad(lon2 - lon1);\r\n  var a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(deg2rad(lat1)) *\r\n      Math.cos(deg2rad(lat2)) *\r\n      Math.sin(dLon / 2) *\r\n      Math.sin(dLon / 2);\r\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  var d = R * c;\r\n\r\n  return Number(d.toFixed(2));\r\n}\r\n\r\nfunction deg2rad(degrees) {\r\n  const radians = degrees * (Math.PI / 180);\r\n\r\n  return radians;\r\n}\r\n\r\nexport default { getDistance };\r\n","import React from \"react\";\r\nimport {\r\n  Spinner,\r\n  Panel,\r\n  List,\r\n  PanelHeader,\r\n  PanelHeaderButton,\r\n  View,\r\n  Search,\r\n  Div,\r\n  platform,\r\n  IOS,\r\n  Cell,\r\n  PromoBanner,\r\n} from \"@vkontakte/vkui\";\r\nimport StationsListCell from \"../components/StationsListCell\";\r\nimport Loc from \"../resources/Loc\";\r\nimport Distance from \"../services/Distance\";\r\nimport DataManager from \"../services/DataManager\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\n\r\nimport Icon24Settings from \"@vkontakte/icons/dist/24/settings\";\r\n\r\nconst osname = platform();\r\n\r\nclass StationsList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      stations: [],\r\n      search: \"\",\r\n      promoBannerProps: null,\r\n    };\r\n  }\r\n\r\n  onSearchChange = (search) => {\r\n    this.setState({ search: search.currentTarget.value });\r\n  };\r\n\r\n  get stations() {\r\n    const search = this.state.search.toLowerCase().trim();\r\n    const filteredStations = this.props.stations.filter(\r\n      (station) =>\r\n        station.title.toLowerCase().indexOf(search) > -1 ||\r\n        station.address.toLowerCase().indexOf(search) > -1\r\n    );\r\n\r\n    return filteredStations;\r\n  }\r\n\r\n  showPanelHeader() {\r\n    return (\r\n      <PanelHeader\r\n        left={\r\n          <PanelHeaderButton\r\n            onClick={() => this.props.history.push(\"findCity\")}\r\n          >\r\n            <Icon24Settings />\r\n          </PanelHeaderButton>\r\n        }\r\n      >\r\n        {Loc.FindStationsTitle}\r\n      </PanelHeader>\r\n    );\r\n  }\r\n\r\n  showStations() {\r\n    let listStations = [];\r\n\r\n    if (this.stations.length > 0) {\r\n      let stations = this.stations.map((station) => {\r\n        if (this.props.geo) {\r\n          const dist = Distance.getDistance(\r\n            ...this.props.geo,\r\n            station.lat,\r\n            station.lng\r\n          );\r\n          station.dist = dist;\r\n        }\r\n\r\n        return station;\r\n      });\r\n\r\n      stations.sort((a, b) => {\r\n        if (a.dist > b.dist) {\r\n          return 1;\r\n        }\r\n        if (a.dist < b.dist) {\r\n          return -1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n\r\n      listStations = stations.map((station, i) => {\r\n        return (\r\n          <StationsListCell key={i} data={station} city={this.props.city} />\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Search\r\n          value={this.state.search}\r\n          onChange={this.onSearchChange}\r\n          maxLength=\"150\"\r\n        />\r\n        {listStations.length > 0 && (\r\n          <List>\r\n            {this.state.promoBannerProps && (\r\n              <PromoBanner bannerData={this.state.promoBannerProps} />\r\n            )}\r\n\r\n            {listStations}\r\n          </List>\r\n        )}\r\n        {listStations.length === 0 && (\r\n          <Cell>\r\n            <Div align=\"center\">\r\n              {osname === IOS\r\n                ? Loc.NothingFindText\r\n                : Loc.NothingFindTextAndroid}\r\n            </Div>\r\n          </Cell>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    bridge.send(\"VKWebAppGetAds\").then((promoBannerProps) => {\r\n      this.setState({ promoBannerProps });\r\n    });\r\n\r\n    if (DataManager.getSearch())\r\n      this.setState({ search: DataManager.getSearch() });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    DataManager.setSearch(this.state.search);\r\n  }\r\n\r\n  showSpinner() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Spinner size=\"medium\" style={{ marginTop: 20 }} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View popout={this.props.popout} activePanel=\"stationsList\">\r\n        <Panel id=\"stationsList\">\r\n          {this.showPanelHeader()}\r\n          {this.props.stations.length > 0 && this.showStations()}\r\n        </Panel>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StationsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderButton,\r\n  View,\r\n  Alert,\r\n  Spinner,\r\n} from \"@vkontakte/vkui\";\r\nimport VKConnect from \"@vkontakte/vkui-connect\";\r\nimport { Map, Placemark, Clusterer } from \"react-yandex-maps\";\r\nimport DataManager from \"../services/DataManager\";\r\nimport Loc from \"../resources/Loc\";\r\nimport Geocode from \"../services/Geocode\";\r\n\r\nimport Icon24Locate from \"@vkontakte/icons/dist/24/locate\";\r\n\r\nclass StationsMap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      styleMap: {\r\n        display: \"flex\",\r\n        flexGrow: \"1\",\r\n        width: \"100%\",\r\n      },\r\n      map: null,\r\n      geo: \"\",\r\n      zoom: 12,\r\n      isLoading: true,\r\n      isLoadingMap: true,\r\n      userGeo: \"\",\r\n      isPanning: false,\r\n      stations: \"\",\r\n    };\r\n  }\r\n\r\n  geoSubscribe = async (e) => {\r\n    switch (e.detail.type) {\r\n      case \"VKWebAppGeodataResult\":\r\n        if (e.detail.data.available) {\r\n          DataManager.setGeo(e.detail.data.lat, e.detail.data.long);\r\n          const city = await Geocode.geoToCity(DataManager.getGeo());\r\n          DataManager.setUserCity(city);\r\n          this.setState({ userGeo: DataManager.getGeo(), isPanning: true });\r\n          this.state.map\r\n            .panTo(this.state.userGeo)\r\n            .then(() => this.setState({ isPanning: false }));\r\n        } else {\r\n          DataManager.setGeo(null, null);\r\n          this.setState({ userGeo: DataManager.getGeo() });\r\n          DataManager.setUserCity(null);\r\n          this.setState({\r\n            popout: (\r\n              <Alert\r\n                actions={[\r\n                  {\r\n                    title: \"Ок\",\r\n                    autoclose: true,\r\n                    style: \"primary\",\r\n                  },\r\n                ]}\r\n                onClose={() => this.setState({ popout: null })}\r\n              >\r\n                <h2>Геопозиция отключена</h2>\r\n                <p>Включите геопозицию в настройках Вашего телефона</p>\r\n              </Alert>\r\n            ),\r\n          });\r\n        }\r\n        break;\r\n      case \"VKWebAppGeodataFailed\":\r\n        this.setState({\r\n          popout: (\r\n            <Alert\r\n              actions={[\r\n                {\r\n                  title: \"Ок\",\r\n                  autoclose: true,\r\n                  style: \"primary\",\r\n                },\r\n              ]}\r\n              onClose={() => this.setState({ popout: null })}\r\n            >\r\n              <p>Не удалось получить геопозицию</p>\r\n            </Alert>\r\n          ),\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  onClickPanelHeaderButton = () => {\r\n    VKConnect.subscribe(this.geoSubscribe);\r\n    VKConnect.send(\"VKWebAppGetGeodata\", {});\r\n  };\r\n\r\n  showPanelHeader() {\r\n    return (\r\n      <PanelHeader\r\n        left={\r\n          <PanelHeaderButton onClick={this.onClickPanelHeaderButton}>\r\n            <Icon24Locate />\r\n          </PanelHeaderButton>\r\n        }\r\n      >\r\n        {Loc.FindStationsTitle}\r\n      </PanelHeader>\r\n    );\r\n  }\r\n\r\n  setMapRef = (map) => {\r\n    if (this._isMounted) this.setState({ map });\r\n  };\r\n\r\n  setPlacemarks() {\r\n    const stations = this.props.stations.map((station, i) => (\r\n      <Placemark\r\n        key={i}\r\n        onClick={() => {\r\n          this.props.city(station);\r\n        }}\r\n        geometry={[station.lat, station.lng]}\r\n        options={{\r\n          iconLayout: \"default#image\",\r\n          iconImageHref:\r\n            \"https://raw.githubusercontent.com/iPagar/donate-blood/master/src/img/heart.png\",\r\n          iconImageSize: [36, 36],\r\n          iconImageOffset: [-18, -36],\r\n        }}\r\n      />\r\n    ));\r\n\r\n    this.setState({ Stations: stations });\r\n  }\r\n\r\n  mapOnLoad = () => {\r\n    this.setState({ isLoadingMap: false });\r\n  };\r\n\r\n  showMap() {\r\n    const { geo, zoom, Stations, isLoading, isLoadingMap } = this.state;\r\n\r\n    const mapState = {\r\n      center: geo,\r\n      zoom: zoom,\r\n    };\r\n    const mapOptions = {\r\n      yandexMapDisablePoiInteractivity: true,\r\n      suppressMapOpenBlock: true,\r\n    };\r\n\r\n    return (\r\n      <div style={this.state.styleMap}>\r\n        {isLoadingMap && this.showSpinner()}\r\n        {!isLoading && (\r\n          <Map\r\n            style={this.state.styleMap}\r\n            defaultState={mapState}\r\n            defaultOptions={mapOptions}\r\n            instanceRef={this.setMapRef}\r\n            onLoad={this.mapOnLoad}\r\n          >\r\n            <Clusterer\r\n              options={{\r\n                preset: \"islands#redClusterIcons\",\r\n                clusterIconColor: \"#f60808\",\r\n                groupByCoordinates: false,\r\n                useMapMargin: true,\r\n                gridSize: 128,\r\n                margin: 10,\r\n                hasBalloon: false,\r\n                hasHint: false,\r\n                zoomMargin: 36,\r\n              }}\r\n            >\r\n              {Stations.map((station) => station)}\r\n            </Clusterer>\r\n            <Placemark\r\n              geometry={this.state.userGeo}\r\n              options={{\r\n                preset: \"islands#geolocationIcon\",\r\n                iconColor: \"#f60808\",\r\n              }}\r\n            />\r\n          </Map>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async setGeo() {\r\n    this.setState({ isLoading: true });\r\n    const actualMapState = DataManager.getMapState();\r\n\r\n    if (actualMapState) {\r\n      //не меняем карту\r\n      this.setState({ geo: actualMapState.center });\r\n      this.setState({ zoom: actualMapState.zoom });\r\n    } else if (DataManager.getCity().title === DataManager.getUserCity()) {\r\n      //показываем геопозицию пользователя\r\n      this.setState({ geo: DataManager.getGeo(), zoom: 14 });\r\n    } else {\r\n      //показываем на центр города\r\n      let geo = await Geocode.addressToGeo(DataManager.getCity().title);\r\n\r\n      this.setState({\r\n        geo,\r\n        zoom: 12,\r\n      });\r\n    }\r\n    this.setState({ userGeo: DataManager.getGeo(), isLoading: false });\r\n  }\r\n\r\n  setMap() {\r\n    if (this.state.map) {\r\n      let mapState = {\r\n        center: this.state.map.getCenter(),\r\n        zoom: this.state.map.getZoom(),\r\n      };\r\n\r\n      DataManager.setMapState(mapState);\r\n    }\r\n  }\r\n\r\n  showSpinner() {\r\n    return (\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          margin: \"auto\",\r\n          top: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n          right: 0,\r\n        }}\r\n      >\r\n        <Spinner size=\"medium\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    VKConnect.unsubscribe(this.geoSubscribe);\r\n    this.setMap();\r\n    this._isMounted = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.setGeo();\r\n    this.setPlacemarks();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View popout={this.state.popout} activePanel=\"stationsMap\">\r\n        <Panel id=\"stationsMap\" centered>\r\n          {this.showPanelHeader()}\r\n          {this.showMap()}\r\n        </Panel>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nStationsMap.propTypes = {\r\n  stations: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default StationsMap;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Cell, Div } from \"@vkontakte/vkui\";\r\n\r\nimport Icon16Dropdown from \"@vkontakte/icons/dist/16/dropdown\";\r\n\r\nclass Topic extends React.Component {\r\n  state = {\r\n    visibleText: false,\r\n    icon: (\r\n      <Icon16Dropdown\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\"\r\n        }}\r\n      />\r\n    ),\r\n    text: null\r\n  };\r\n\r\n  handleTitleClick = e => {\r\n    // e.currentTarget.children[0].className = `Tappable Tappable--ios Cell__in Tappable--inactive`;\r\n    // console.log(e.currentTarget.children[0].className);\r\n    let icon = (\r\n      <Icon16Dropdown\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          transform: \"rotate(180deg)\"\r\n        }}\r\n      />\r\n    );\r\n    let text = this.props.data.text;\r\n\r\n    if (this.state.visibleText) {\r\n      icon = (\r\n        <Icon16Dropdown\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\"\r\n          }}\r\n        />\r\n      );\r\n\r\n      text = null;\r\n    }\r\n\r\n    this.setState({ visibleText: !this.state.visibleText, text, icon });\r\n  };\r\n\r\n  showText() {\r\n    const text = this.state.text.map((textData, i) => (\r\n      <Div key={i}>{this.state.text[i]}</Div>\r\n    ));\r\n\r\n    return text;\r\n  }\r\n\r\n  render() {\r\n    const { title } = this.props.data;\r\n    return (\r\n      <div>\r\n        <Cell multiline size=\"l\" onClick={this.handleTitleClick}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <b>{title}</b> {this.state.icon}\r\n          </div>\r\n        </Cell>\r\n        {this.state.visibleText && this.showText()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopic.propTypes = {\r\n  data: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    text: PropTypes.array.isRequired\r\n  })\r\n};\r\n\r\nexport default Topic;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Topic from \"../components/Topic\";\r\nimport Topics from \"../resources/Topics\";\r\nimport { Panel, PanelHeader, Group, List, View } from \"@vkontakte/vkui\";\r\n\r\nimport Loc from \"../resources/Loc\";\r\n\r\nclass About extends React.Component {\r\n  showTopics() {\r\n    const topics = Topics.map((topic, i) => {\r\n      return <Topic key={i} data={topic} />;\r\n    });\r\n    return (\r\n      <Group>\r\n        <List>{topics}</List>\r\n      </Group>\r\n    );\r\n  }\r\n\r\n  showPanelHeader() {\r\n    return <PanelHeader>{Loc.SettingsAboutTitle}</PanelHeader>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View activePanel=\"aboutDonationPanel\">\r\n        <Panel id=\"aboutDonationPanel\">\r\n          {this.showPanelHeader()}\r\n          {this.showTopics()}\r\n        </Panel>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nAbout.propTypes = {\r\n  welcome: PropTypes.bool\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"../styles/PopupView.css\";\r\n\r\nimport Icon24Cancel from \"@vkontakte/icons/dist/24/cancel\";\r\n\r\nclass PopupView extends React.Component {\r\n\tstate = { isActive: true };\r\n\tpopupBlock = React.createRef();\r\n\r\n\trender() {\r\n\t\tconst { isActive } = this.state;\r\n\t\tconst { children, title, onClose, bottom } = this.props;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{isActive && (\r\n\t\t\t\t\t<div className=\"PopupBlock Show\" ref={this.popupBlock}>\r\n\t\t\t\t\t\t<div className=\"PopupView\">\r\n\t\t\t\t\t\t\t<div className=\"PopupHeader\">\r\n\t\t\t\t\t\t\t\t<div className=\"PopupHeaderText\">{title}</div>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName=\"PopupHeaderClose\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.popupBlock.current.classList.remove(\r\n\t\t\t\t\t\t\t\t\t\t\t\"Show\"\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tthis.popupBlock.current.classList.add(\r\n\t\t\t\t\t\t\t\t\t\t\t\"Hide\"\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({ isActive: false });\r\n\t\t\t\t\t\t\t\t\t\tonClose();\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Icon24Cancel />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"PopupContent\">{children}</div>\r\n\t\t\t\t\t\t\t<div className=\"PopupBottom\">{bottom}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PopupView;\r\n","import React from \"react\";\r\nimport VKConnect from \"@vkontakte/vk-bridge\";\r\nimport VKConnectPromise from \"@vkontakte/vk-bridge\";\r\nimport DataManager from \"../services/DataManager\";\r\nimport Database from \"../services/Database\";\r\nimport Geocode from \"../services/Geocode\";\r\nimport Loc from \"../resources/Loc\";\r\nimport {\r\n  View,\r\n  Panel,\r\n  Epic,\r\n  Tabbar,\r\n  TabbarItem,\r\n  ScreenSpinner,\r\n  Alert,\r\n  Button,\r\n  Link,\r\n} from \"@vkontakte/vkui\";\r\nimport Icon28Place from \"@vkontakte/icons/dist/28/place\";\r\nimport Icon28Search from \"@vkontakte/icons/dist/28/search\";\r\nimport Icon28HelpOutline from \"@vkontakte/icons/dist/28/help_outline\";\r\nimport Icon16Clear from \"@vkontakte/icons/dist/16/clear\";\r\n\r\nimport StationsList from \"./StationsList\";\r\nimport StationsMap from \"./StationsMap\";\r\nimport AboutDonation from \"./AboutDonation\";\r\nimport PopupView from \"../components/PopupView\";\r\n\r\n// res.VKWebAppGetUserInfo.data = {\r\n//   type: \"VKWebAppGeodataResult\",\r\n//   data: {\r\n//     available: 1,\r\n//     lat: \"55.86647\",\r\n//     long: \"38.443\"\r\n//   }\r\n// };\r\n\r\nlet isCancelled = false;\r\nlet timeToShow;\r\nlet isActive = false;\r\n\r\nclass FindStations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeView: \"findStations\",\r\n      activeStory: \"stationsList\",\r\n      isLoading: false,\r\n      styleTabButton: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      },\r\n      stations: [],\r\n      popout: null,\r\n    };\r\n    this.buttonRef = React.createRef();\r\n  }\r\n\r\n  onStoryChange = (e) => {\r\n    this.setState({ activeStory: e.currentTarget.dataset.story });\r\n    this.props.history.replace(\"?\" + e.currentTarget.dataset.story);\r\n  };\r\n\r\n  showTabbar = () => {\r\n    return (\r\n      <Tabbar>\r\n        <TabbarItem\r\n          onClick={this.onStoryChange}\r\n          selected={this.state.activeStory === \"stationsList\"}\r\n          data-story=\"stationsList\"\r\n        >\r\n          <div style={this.state.styleTabButton}>\r\n            <Icon28Search />\r\n          </div>\r\n        </TabbarItem>\r\n        <TabbarItem\r\n          onClick={this.onStoryChange}\r\n          selected={this.state.activeStory === \"stationsMap\"}\r\n          data-story=\"stationsMap\"\r\n        >\r\n          <div style={this.state.styleTabButton}>\r\n            <Icon28Place />\r\n          </div>\r\n        </TabbarItem>\r\n        <TabbarItem\r\n          onClick={this.onStoryChange}\r\n          selected={this.state.activeStory === \"aboutDonation\"}\r\n          data-story=\"aboutDonation\"\r\n        >\r\n          <div style={this.state.styleTabButton}>\r\n            <Icon28HelpOutline />\r\n          </div>\r\n        </TabbarItem>\r\n      </Tabbar>\r\n    );\r\n  };\r\n\r\n  async setCity() {\r\n    this.setState({ isLoading: true, popout: <ScreenSpinner /> });\r\n\r\n    const city = await Geocode.geoToCity(DataManager.getGeo());\r\n    DataManager.setUserCity(city);\r\n    const cities = await Database.getCities(DataManager.getUserCity());\r\n    if (cities.length > 0) {\r\n      const stations = await Database.getStations(cities[0]);\r\n\r\n      if (stations.length > 0) {\r\n        DataManager.setCity(cities[0]);\r\n        DataManager.setStations(stations);\r\n        this.setState({ stations });\r\n        this.setState({ isLoading: false, popout: null });\r\n      } else {\r\n        const center = await Geocode.getProvincyCenter(DataManager.getGeo());\r\n        const cities = await Database.getCities(center);\r\n        const stations = await Database.getStations(cities[0]);\r\n\r\n        if (cities.length > 0 && stations.length > 0) {\r\n          DataManager.setCity(cities[0]);\r\n          DataManager.setStations(stations);\r\n          this.setState({ stations });\r\n          this.setState({ isLoading: false, popout: null });\r\n        } else {\r\n          this.openEmptySheet(Loc.EmptySheetTitle);\r\n        }\r\n      }\r\n    } else this.openEmptySheet(Loc.EmptySheetTitle);\r\n  }\r\n\r\n  setStations = () => {\r\n    this.setState({\r\n      stations: DataManager.getStations(),\r\n    });\r\n  };\r\n\r\n  geoSubscribe = (e) => {\r\n    switch (e.detail.type) {\r\n      case \"VKWebAppGeodataResult\":\r\n        if (e.detail.data.available) {\r\n          DataManager.setGeo(e.detail.data.lat, e.detail.data.long);\r\n\r\n          this.setCity();\r\n        } else this.openEmptySheet(Loc.GetGeoError);\r\n        break;\r\n      case \"VKWebAppGeodataFailed\":\r\n        this.openEmptySheet(Loc.GetGeoError);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  getCity() {\r\n    if (DataManager.getCity() === null) {\r\n      VKConnect.subscribe(this.geoSubscribe);\r\n      VKConnect.send(\"VKWebAppGetGeodata\", {});\r\n    } else {\r\n      this.setStations();\r\n    }\r\n  }\r\n\r\n  openEmptySheet(text) {\r\n    const { history } = this.props;\r\n\r\n    if (this._isMounted)\r\n      this.setState({\r\n        popout: (\r\n          <Alert\r\n            actions={[\r\n              {\r\n                title: Loc.EmptySheetActionTitle,\r\n                autoclose: true,\r\n                style: \"default\",\r\n              },\r\n            ]}\r\n            onClose={() => {\r\n              this.setState({ popout: null });\r\n              history.replace(\"findCityNecessarily\");\r\n            }}\r\n          >\r\n            <h2>{text}</h2>\r\n          </Alert>\r\n        ),\r\n      });\r\n  }\r\n\r\n  city = (city) => {\r\n    DataManager.setStation(city);\r\n    this.props.history.push(\"station\");\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    VKConnect.unsubscribe(this.geoSubscribe);\r\n    clearTimeout(timeToShow);\r\n    this._isMounted = false;\r\n  }\r\n\r\n  // showButton = () => {\r\n  //   if (!this.state.popout) {\r\n  //     this.buttonRef.current.classList.add(\"show\");\r\n  //     isActive = true;\r\n  //   }\r\n  // };\r\n\r\n  async componentDidMount() {\r\n    this._isMounted = true;\r\n    if (this.props.location.search)\r\n      this.setState({ activeStory: this.props.location.search.slice(1) });\r\n\r\n    this.getCity();\r\n    this.loadPopupView();\r\n\r\n    // this.loadButton();\r\n  }\r\n\r\n  loadPopupView() {\r\n    // if (!isCancelled) {\r\n    //   timeToShow = setTimeout(this.showPopupView, 5000);\r\n    // }\r\n  }\r\n\r\n  popupError = () => {\r\n    this.setState({\r\n      popout: (\r\n        <Alert\r\n          actions={[\r\n            {\r\n              title: \"Ок\",\r\n              autoclose: true,\r\n              style: \"default\",\r\n            },\r\n          ]}\r\n          onClose={() => this.setState({ popout: null })}\r\n        >\r\n          Ошибка\r\n        </Alert>\r\n      ),\r\n    });\r\n  };\r\n\r\n  subToPublic = () => {\r\n    VKConnectPromise.send(\"VKWebAppJoinGroup\", { group_id: 177443119 });\r\n    this.setState({ popout: null });\r\n  };\r\n\r\n  popupSuccess = () => {\r\n    this.setState({\r\n      popout: (\r\n        <Alert\r\n          actions={[\r\n            {\r\n              title: \"Хорошо\",\r\n              action: this.subToPublic,\r\n              style: \"default\",\r\n            },\r\n            {\r\n              title: \"Отмена\",\r\n              autoclose: true,\r\n              style: \"cancel\",\r\n            },\r\n          ]}\r\n          actionsLayout=\"vertical\"\r\n          onClose={() => {\r\n            this.setState({ popout: null });\r\n          }}\r\n        >\r\n          Будьте в курсе всех событий, связанных с донорством крови -\r\n          подпишитесь на нас!\r\n        </Alert>\r\n      ),\r\n    });\r\n  };\r\n\r\n  showPopupView = () => {\r\n    if (!this.state.isLoading)\r\n      this.setState({\r\n        popout: (\r\n          <PopupView\r\n            title=\"Всемирный день донора\"\r\n            onClose={() => {\r\n              this.setState({ popout: null });\r\n              isCancelled = true;\r\n            }}\r\n            bottom={\r\n              <Button\r\n                size=\"xl\"\r\n                onClick={() => {\r\n                  isCancelled = true;\r\n                  this.setState({ popout: <ScreenSpinner /> });\r\n                  VKConnectPromise.send(\"VKWebAppGetAuthToken\", {\r\n                    app_id: 6783775,\r\n                    scope: \"stories\",\r\n                  })\r\n                    .then((data) => {\r\n                      let token = data.data.access_token;\r\n                      VKConnectPromise.send(\"VKWebAppCallAPIMethod\", {\r\n                        method: \"stories.getPhotoUploadServer\",\r\n                        params: {\r\n                          add_to_news: 1,\r\n                          link_url: \"https://vk.com/app6783775\",\r\n                          v: \"5.95\",\r\n                          access_token: token,\r\n                        },\r\n                      })\r\n                        .then((resp) => {\r\n                          const url = resp.data.response.upload_url;\r\n                          fetch(`https://ipagar.asuscomm.com:8084/?url=${url}`)\r\n                            .then(this.popupSuccess)\r\n                            .catch(this.popupError);\r\n                        })\r\n                        .catch(this.popupError);\r\n                    })\r\n                    .catch(this.popupError);\r\n                }}\r\n              >\r\n                Поделиться историей!\r\n              </Button>\r\n            }\r\n          >\r\n            <p>\r\n              Сегодя - всемирный день донора крови. Миллионы людей благодаря\r\n              донорской безопасной крови продолжают жить. Донор - дарит жизнь\r\n              тому, кто нуждается в переливании крови.\r\n            </p>\r\n\r\n            <img\r\n              src=\"https://i.ibb.co/GpmMXjH/s-Vfck52-Mo-QI.jpg\"\r\n              style={{ width: \"100%\" }}\r\n              alt=\"Донорство крови\"\r\n              border=\"0\"\r\n            />\r\n          </PopupView>\r\n        ),\r\n      });\r\n  };\r\n\r\n  // loadButton() {\r\n  //   if (!isCancelled && !isActive)\r\n  //     timeToShow = setTimeout(this.showButton, 5000);\r\n  //   else if (isActive && !isCancelled)\r\n  //     this.buttonRef.current.style.bottom = \"calc(var(--tabbar_height) + 5px)\";\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Epic activeStory={this.state.activeStory} tabbar={this.showTabbar()}>\r\n          <StationsList\r\n            popout={this.state.popout}\r\n            id=\"stationsList\"\r\n            history={this.props.history}\r\n            stations={this.state.stations}\r\n            city={this.city}\r\n            geo={DataManager.getGeo()}\r\n          />\r\n          <StationsMap\r\n            popout={this.state.popout}\r\n            id=\"stationsMap\"\r\n            stations={this.state.stations}\r\n            city={this.city}\r\n          />\r\n          <AboutDonation popout={this.state.popout} id=\"aboutDonation\" />\r\n        </Epic>\r\n        {\r\n          // {!this.state.isLoading &&\r\n          //   всплывающая кнопка\r\n          // <div\r\n          //   style={{\r\n          //     position: \"fixed\",\r\n          //     display: \"flex\",\r\n          //     alignItems: \"center\",\r\n          //     justifyContent: \"center\",\r\n          //     bottom: \"0\",\r\n          //     width: \"100%\",\r\n          //     zIndex: 1\r\n          //   }}\r\n          //   ref={this.buttonRef}\r\n          // >\r\n          //   <Button\r\n          //     style={{\r\n          //       position: \"flex\"\r\n          //     }}\r\n          //     after={\r\n          //       <div\r\n          //         onClick={() => {\r\n          //           this.buttonRef.current.classList.remove(\"show\");\r\n          //           this.buttonRef.current.classList.add(\"hide\");\r\n          //           isCancelled = true;\r\n          //         }}\r\n          //       >\r\n          //         <Icon16Clear />\r\n          //       </div>\r\n          //     }\r\n          //   >\r\n          //     <div\r\n          //       onClick={() => {\r\n          //         this.buttonRef.current.classList.remove(\"show\");\r\n          //         this.buttonRef.current.classList.add(\"hide\");\r\n          //         isCancelled = true;\r\n          //       }}\r\n          //     >\r\n          //       <Link\r\n          //         href=\"https://vk.com/donateblood?w=wall-177443119_20\"\r\n          //         target=\"_blank\"\r\n          //       >\r\n          //         <div style={{ color: \"var(--button_primary_foreground)\" }}>\r\n          //           Какова польза для организма?\r\n          //         </div>\r\n          //       </Link>\r\n          //     </div>\r\n          //   </Button>\r\n          // </div>\r\n          // }\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nFindStations.propTypes = {};\r\n\r\nexport default FindStations;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Cell } from \"@vkontakte/vkui\";\r\n\r\nclass FindCityCell extends React.Component {\r\n  onClick = () => {\r\n    this.props.onClick(this.props.data);\r\n  };\r\n\r\n  render() {\r\n    let description;\r\n    if (this.props.data.region) description = this.props.data.region.title;\r\n    return (\r\n      <Cell description={description} onClick={this.onClick}>\r\n        {!description && (\r\n          <div style={{ lineHeight: \"39px\" }}>{this.props.data.title}</div>\r\n        )}\r\n        {description && this.props.data.title}\r\n      </Cell>\r\n    );\r\n  }\r\n}\r\n\r\nFindCityCell.propTypes = {\r\n  data: PropTypes.shape({\r\n    title: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nexport default FindCityCell;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Database from \"../services/Database\";\r\nimport FindCityCell from \"../components/FindCityCell\";\r\nimport DataManager from \"../services/DataManager\";\r\nimport Loc from \"../resources/Loc\";\r\nimport {\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderButton,\r\n  platform,\r\n  IOS,\r\n  Search,\r\n  List,\r\n  Spinner,\r\n  Div,\r\n  View,\r\n  Cell,\r\n  Alert,\r\n  ScreenSpinner,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\r\nconst osname = platform();\r\n\r\nclass FindCity extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\",\r\n      isLoading: false,\r\n      cities: [],\r\n      popout: null,\r\n    };\r\n  }\r\n\r\n  onChange = async (search) => {\r\n    if (this._isMounted) {\r\n      console.log(search.currentTarget.value);\r\n      this.setState({ search: search.currentTarget.value });\r\n      await this.updateCities();\r\n    }\r\n  };\r\n\r\n  async updateCities() {\r\n    await this.setState({ isLoading: true });\r\n    const { search } = this.state;\r\n    const cities = await Database.getCities(search);\r\n\r\n    if (search === this.state.search)\r\n      await this.setState({ cities, isLoading: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.updateCities();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  showSpinner() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Spinner size=\"medium\" style={{ marginTop: 20 }} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onCellClick = async (data) => {\r\n    this.setState({ popout: <ScreenSpinner /> });\r\n    const stations = await Database.getStations(data);\r\n\r\n    if (stations.length > 0) {\r\n      if (this._isMounted) {\r\n        DataManager.setCity(data);\r\n        DataManager.setStations(stations);\r\n        this.setState({ popout: null });\r\n      }\r\n      if (this.props.necessarily) this.props.history.push(\"findStations\");\r\n      else this.props.history.goBack();\r\n    } else this.openEmptySheet(Loc.EmptySheetTitle);\r\n  };\r\n\r\n  openEmptySheet(text) {\r\n    if (this._isMounted)\r\n      this.setState({\r\n        popout: (\r\n          <Alert\r\n            actions={[\r\n              {\r\n                title: Loc.EmptySheetActionTitle,\r\n                autoclose: true,\r\n                style: \"default\",\r\n              },\r\n            ]}\r\n            onClose={() => {\r\n              this.setState({ popout: null });\r\n            }}\r\n          >\r\n            <h2>{text}</h2>\r\n          </Alert>\r\n        ),\r\n      });\r\n  }\r\n\r\n  showCities() {\r\n    const listCities = this.state.cities.map((city) => {\r\n      return (\r\n        <FindCityCell key={city.id} data={city} onClick={this.onCellClick} />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {listCities.length > 0 && <List>{listCities}</List>}\r\n        {listCities.length === 0 && (\r\n          <Cell>\r\n            <Div align=\"center\">\r\n              {osname === IOS\r\n                ? Loc.NothingFindText\r\n                : Loc.NothingFindTextAndroid}\r\n            </Div>\r\n          </Cell>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  showSearch() {\r\n    return (\r\n      <Search\r\n        value={this.state.search}\r\n        onChange={this.onChange}\r\n        maxLength=\"30\"\r\n      />\r\n    );\r\n  }\r\n\r\n  showPanelHeader() {\r\n    let headerButton = (\r\n      <PanelHeaderButton onClick={this.props.history.goBack}>\r\n        {osname === IOS ? \"Отмена\" : <Icon24Back />}\r\n      </PanelHeaderButton>\r\n    );\r\n\r\n    if (this.props.necessarily) headerButton = \" \";\r\n\r\n    return (\r\n      <PanelHeader noShadow left={headerButton}>\r\n        {Loc.FindCityTitle}\r\n      </PanelHeader>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View activePanel=\"findCityPanel\" popout={this.state.popout}>\r\n        <Panel id=\"findCityPanel\">\r\n          {this.showPanelHeader()}\r\n          {this.showSearch()}\r\n          {!this.state.isLoading && this.showCities()}\r\n          {this.state.isLoading && this.showSpinner()}\r\n        </Panel>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nFindCity.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FindCity;\r\n","import React from \"react\";\r\nimport { Map, Placemark } from \"react-yandex-maps\";\r\nimport {\r\n  Panel,\r\n  PanelHeaderButton,\r\n  PanelHeader,\r\n  View,\r\n  Group,\r\n  Cell,\r\n  List,\r\n  Link,\r\n  Spinner,\r\n  platform,\r\n  Header,\r\n  IOS,\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\r\nimport Loc from \"../resources/Loc\";\r\nimport DataManager from \"../services/DataManager\";\r\n\r\nimport { findNumbers } from \"libphonenumber-js\";\r\n\r\nimport Icon24Place from \"@vkontakte/icons/dist/24/place\";\r\nimport Icon24Globe from \"@vkontakte/icons/dist/24/globe\";\r\nimport Icon24Phone from \"@vkontakte/icons/dist/24/phone\";\r\nimport Icon24Recent from \"@vkontakte/icons/dist/24/recent\";\r\n\r\nconst osname = platform();\r\n\r\nclass Station extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      styleMap: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        height: \"300px\",\r\n      },\r\n      isLoadingMap: true,\r\n      station: DataManager.getStation(),\r\n    };\r\n  }\r\n\r\n  showPanelHeader() {\r\n    const { history } = this.props;\r\n\r\n    return (\r\n      <PanelHeader\r\n        left={\r\n          <PanelHeaderButton onClick={history.goBack}>\r\n            {osname === IOS ? \"Отмена\" : <Icon24Back />}\r\n          </PanelHeaderButton>\r\n        }\r\n      >\r\n        {Loc.StationTitle}\r\n      </PanelHeader>\r\n    );\r\n  }\r\n\r\n  mapOnLoad = () => {\r\n    this.setState({ isLoadingMap: false });\r\n  };\r\n\r\n  showMap() {\r\n    const zoom = 16;\r\n\r\n    const mapState = {\r\n      center: [this.state.station.lat, this.state.station.lng],\r\n      zoom: zoom,\r\n    };\r\n\r\n    const mapOptions = {\r\n      yandexMapDisablePoiInteractivity: true,\r\n      suppressMapOpenBlock: true,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.state.isLoadingMap && this.showSpinner()}\r\n        <Map\r\n          defaultOptions={mapOptions}\r\n          style={this.state.styleMap}\r\n          defaultState={mapState}\r\n          onLoad={this.mapOnLoad}\r\n        >\r\n          <Placemark\r\n            geometry={[this.state.station.lat, this.state.station.lng]}\r\n            options={{\r\n              iconLayout: \"default#image\",\r\n              iconImageHref:\r\n                \"https://raw.githubusercontent.com/iPagar/donate-blood/master/src/img/heart.png\",\r\n              iconImageSize: [36, 36],\r\n              iconImageOffset: [-18, -36],\r\n            }}\r\n          />\r\n          <Placemark\r\n            geometry={DataManager.getGeo()}\r\n            options={{\r\n              preset: \"islands#geolocationIcon\",\r\n              iconColor: \"#f60808\",\r\n            }}\r\n          />\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showSite() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.station.site.length > 0 && (\r\n          <Group title=\"Сайт\">\r\n            <List>\r\n              <Cell multiline before={<Icon24Globe />}>\r\n                <Link\r\n                  href={\r\n                    this.state.station.site.includes(\"http\")\r\n                      ? `${this.state.station.site}`\r\n                      : `//${this.state.station.site}`\r\n                  }\r\n                  target=\"_blank\"\r\n                >\r\n                  {this.state.station.site}\r\n                </Link>\r\n              </Cell>\r\n            </List>\r\n          </Group>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  showEmail() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.station.email.length > 0 && (\r\n          <Group title=\"E-mail\">\r\n            <List>\r\n              <Cell multiline before={<Icon24Globe />}>\r\n                <Link href={this.state.station.site}>\r\n                  {this.state.station.site}\r\n                </Link>\r\n              </Cell>\r\n            </List>\r\n          </Group>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  showWorkTime() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.station.worktime.length > 0 && (\r\n          <Group title=\"Время работы\">\r\n            <List>\r\n              <Cell multiline before={<Icon24Recent />}>\r\n                {this.state.station.worktime}\r\n              </Cell>\r\n            </List>\r\n          </Group>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  showTel() {\r\n    let tels = [];\r\n    if (this.state.station.phones.length > 0)\r\n      findNumbers(this.state.station.phones, \"RU\", {\r\n        v2: true,\r\n      }).map((tel) => tels.push(tel.number.formatNational()));\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {tels.length > 0 && (\r\n          <Group title=\"Контакты\">\r\n            <List>\r\n              {tels.map((tel, i) => (\r\n                <Cell key={i} before={<Icon24Phone />}>\r\n                  <Link href={`tel:${tel}`}>{tel}</Link>\r\n                </Cell>\r\n              ))}\r\n            </List>\r\n          </Group>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  showAddress() {\r\n    return (\r\n      <Group>\r\n        <Header level=\"2\">\r\n          <div style={{ whiteSpace: \"normal\" }}>{this.state.station.title}</div>\r\n        </Header>\r\n        <List>\r\n          <Cell multiline before={<Icon24Place />}>\r\n            <Link\r\n              href={`//maps.yandex.ru/?text=${this.state.station.city.title}, ${this.state.station.address}`}\r\n            >\r\n              {this.state.station.address}\r\n            </Link>\r\n          </Cell>\r\n        </List>\r\n      </Group>\r\n    );\r\n  }\r\n\r\n  showInfo() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.showAddress()}\r\n        {this.showWorkTime()}\r\n        {this.showTel()}\r\n        {this.showSite()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  showSpinner() {\r\n    return (\r\n      <div style={this.state.styleMap}>\r\n        <Spinner size=\"medium\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View activePanel=\"station\" popout={this.state.popout}>\r\n        <Panel id=\"station\">\r\n          {this.showPanelHeader()}\r\n          {this.showMap()}\r\n          {this.showInfo()}\r\n        </Panel>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Station;\r\n","import React from \"react\";\r\nimport VKConnect from \"@vkontakte/vk-bridge\";\r\nimport { Root, View } from \"@vkontakte/vkui\";\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\nimport \"./resources/ui.css\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport \"./app.css\";\r\n\r\nimport FindStations from \"./panels/FindStations\";\r\nimport FindCity from \"./panels/FindCity\";\r\nimport Station from \"./panels/Station\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isLoading: false };\r\n  }\r\n\r\n  getTheme() {\r\n    VKConnect.subscribe((e) => {\r\n      switch (e.detail.type) {\r\n        case \"VKWebAppUpdateConfig\":\r\n          let schemeAttribute = document.createAttribute(\"scheme\");\r\n          schemeAttribute.value = e.detail.data.scheme\r\n            ? e.detail.data.scheme\r\n            : \"client_light\";\r\n          document.body.attributes.setNamedItem(schemeAttribute);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  async setInitialView() {\r\n    await this.setState({ isLoading: true });\r\n\r\n    this.props.history.replace(\"findStations\");\r\n\r\n    await this.setState({ isLoading: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setInitialView();\r\n    this.getTheme();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    const activeView = this.props.location.pathname.slice(1);\r\n\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n        {!isLoading && (\r\n          <Root activeView={activeView}>\r\n            <Route id=\"findStations\" component={FindStations} />\r\n            <Route id=\"station\" component={Station} />\r\n            <Route id=\"findCity\" component={FindCity} />\r\n            <Route\r\n              id=\"findCityNecessarily\"\r\n              render={() => (\r\n                <View activePanel=\"findCityPanel\">\r\n                  <FindCity\r\n                    id=\"findCityPanel\"\r\n                    history={this.props.history}\r\n                    necessarily\r\n                  />\r\n                </View>\r\n              )}\r\n            />\r\n          </Root>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import \"core-js/es6/map\";\r\nimport \"core-js/es6/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport connect from \"@vkontakte/vkui-connect\";\r\nimport App from \"./App\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { YMaps } from \"react-yandex-maps\";\r\n\r\n// Init VK App\r\nconnect.send(\"VKWebAppInit\", {});\r\n\r\nReactDOM.render(\r\n\t<HashRouter>\r\n\t\t<YMaps>\r\n\t\t\t<App />\r\n\t\t</YMaps>\r\n\t</HashRouter>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}