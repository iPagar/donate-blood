{"version":3,"sources":["services/DataManager.js","services/Geocode.js","services/Database.js","components/StationsListCell.js","services/Distance.js","panels/StationsList.js","panels/StationsMap.js","components/Topic.js","panels/AboutDonation.js","panels/FindStations.js","components/FindCityCell.js","panels/FindCity.js","panels/Station.js","App.js","index.js"],"names":["DataManager","mapState","sessionStorage","setItem","JSON","stringify","parse","getItem","search","city","this","setSearch","setMapState","userCity","lat","long","geo","Number","station","stations","_callee","apiKey","request","response","json","cityTitle","regenerator_default","a","wrap","_context","prev","next","Api","ApiYandex","concat","fetch","sent","GeoObjectCollection","featureMember","GeoObject","name","abrupt","stop","_callee2","address","geoData","_context2","Point","pos","substr","split","_callee3","oblast","request1","response1","json1","cityTitle1","_context3","metaDataProperty","GeocoderMetaData","AddressDetails","Country","AdministrativeArea","AdministrativeAreaName","state","Geocode","geoToCity","addressToGeo","getProvincyCenter","Database","cityId","id","wrapAPIKey","data","filter","title","toLowerCase","indexOf","Promise","all","map","_ref","Object","asyncToGenerator","mark","reverse","join","lng","lon","_x2","apply","arguments","cities","replace","trim","StationsListCell","dist","props","Math","round","toFixed","react_default","createElement","style","display","justifyContent","alignContent","alignItems","lineHeight","chevron_default","className","_this","vkui","multiline","description","asideContent","showLength","onClick","size","React","Component","deg2rad","degrees","PI","Distance","getDistance","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","c","atan2","sqrt","osname","platform","StationsList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","setState","_this2","left","history","push","settings_default","Loc","FindStationsTitle","_this3","listStations","length","toConsumableArray","sort","b","i","components_StationsListCell","key","Fragment","value","onChange","maxLength","align","IOS","NothingFindText","NothingFindTextAndroid","getSearch","flexDirection","marginTop","popout","activePanel","showPanelHeader","showStations","StationsMap","geoSubscribe","e","t0","detail","type","available","setGeo","getGeo","setUserCity","userGeo","isPanning","panTo","then","actions","autoclose","onClose","_x","onClickHeaderButton","VKConnect","subscribe","send","setMapRef","_isMounted","mapOnLoad","isLoadingMap","styleMap","flexGrow","width","zoom","isLoading","locate_default","react_yandex_maps_umd_production_min","geometry","options","iconLayout","iconImageHref","iconImageSize","iconImageOffset","Stations","_this$state","center","showSpinner","defaultState","defaultOptions","yandexMapDisablePoiInteractivity","suppressMapOpenBlock","instanceRef","onLoad","preset","clusterIconColor","groupByCoordinates","useMapMargin","gridSize","margin","hasBalloon","hasHint","zoomMargin","iconColor","actualMapState","getMapState","getCity","getUserCity","getCenter","getZoom","position","top","bottom","right","unsubscribe","setMap","setPlacemarks","centered","showMap","Topic","visibleText","icon","dropdown_default","text","handleTitleClick","transform","textData","showText","About","topics","Topics","topic","components_Topic","SettingsAboutTitle","showTopics","FindStations","onStoryChange","activeStory","currentTarget","dataset","story","showTabbar","selected","data-story","styleTabButton","search_default","place_default","help_outline_default","setStations","getStations","setCity","openEmptySheet","GetGeoError","setStation","activeView","getCities","EmptySheetTitle","EmptySheetActionTitle","location","slice","tabbar","panels_StationsList","panels_StationsMap","AboutDonation","FindCityCell","region","FindCity","updateCities","onCellClick","_ref2","necessarily","goBack","listCities","components_FindCityCell","headerButton","back_default","noShadow","FindCityTitle","showSearch","showCities","Station","height","getStation","StationTitle","site","before","globe_default","href","includes","target","email","worktime","recent_default","tels","phones","findNumbers","v2","tel","number","formatNational","phone_default","_24_place_default","showAddress","showWorkTime","showTel","showSite","showInfo","App","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","setInitialView","getTheme","pathname","Route","component","render","panels_FindCity","withRouter","connect","ReactDOM","HashRouter","src_App","getElementById"],"mappings":"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","file":"static/js/main.00c2b69d.chunk.js","sourcesContent":["class DataManager {\n  static setMapState(mapState) {\n    sessionStorage.setItem(\"mapState\", JSON.stringify(mapState));\n  }\n\n  static getMapState() {\n    const mapState = JSON.parse(sessionStorage.getItem(\"mapState\"));\n\n    return mapState;\n  }\n\n  static setSearch(search) {\n    sessionStorage.setItem(\"search\", JSON.stringify(search));\n  }\n\n  static getSearch() {\n    const search = JSON.parse(sessionStorage.getItem(\"search\"));\n\n    return search;\n  }\n\n  static setCity(city) {\n    sessionStorage.setItem(\"city\", JSON.stringify(city));\n    this.setSearch(\"\");\n    this.setMapState(null);\n  }\n\n  static getCity() {\n    const city = JSON.parse(sessionStorage.getItem(\"city\"));\n\n    return city;\n  }\n\n  static setUserCity(userCity) {\n    sessionStorage.setItem(\"userCity\", JSON.stringify(userCity));\n  }\n\n  static getUserCity() {\n    const userCity = JSON.parse(sessionStorage.getItem(\"userCity\"));\n\n    return userCity;\n  }\n\n  static setGeo(lat, long) {\n    const geo = JSON.stringify([Number(lat), Number(long)]);\n\n    sessionStorage.setItem(\"geo\", geo);\n  }\n\n  static getGeo() {\n    const geo = JSON.parse(sessionStorage.getItem(\"geo\"));\n\n    return geo;\n  }\n\n  static setStation(station) {\n    sessionStorage.setItem(\"station\", JSON.stringify(station));\n  }\n\n  static getStation() {\n    const station = JSON.parse(sessionStorage.getItem(\"station\"));\n\n    return station;\n  }\n\n  static setStations(stations) {\n    sessionStorage.setItem(\"stations\", JSON.stringify(stations));\n  }\n\n  static getStations() {\n    const stations = JSON.parse(sessionStorage.getItem(\"stations\"));\n\n    return stations;\n  }\n}\n\nexport default DataManager;\n","import Api from \"../configs/Api.json\";\n\nasync function geoToCity(geo) {\n  const apiKey = Api.ApiYandex;\n  const kind = \"locality\";\n  const format = \"json\";\n  const sco = \"latlong\";\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&sco=${sco}&results=1&format=${format}&kind=${kind}&geocode=${geo}`;\n\n  const response = await fetch(request);\n  const json = await response.json();\n\n  const cityTitle =\n    json.response.GeoObjectCollection.featureMember[0].GeoObject.name;\n  return cityTitle;\n}\n\nasync function addressToGeo(address) {\n  const apiKey = Api.ApiYandex;\n  const format = \"json\";\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&results=1&format=${format}&geocode=${address}`;\n\n  const response = await fetch(request);\n  const json = await response.json();\n\n  const geoData = json.response.GeoObjectCollection.featureMember[0]\n    ? JSON.stringify(\n        json.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos\n      )\n        .substr(1, 17)\n        .split(\" \")\n    : null;\n\n  const geo = geoData ? [geoData[1], geoData[0]] : null;\n\n  return geo;\n}\n\nasync function getProvincyCenter(geo) {\n  const apiKey = Api.ApiYandex;\n  const kind = \"locality\";\n  const format = \"json\";\n  const sco = \"latlong\";\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&sco=${sco}&results=1&format=${format}&kind=${kind}&geocode=${geo}`;\n\n  const response = await fetch(request);\n  const json = await response.json();\n\n  const oblast =\n    json.response.GeoObjectCollection.featureMember[0].GeoObject\n      .metaDataProperty.GeocoderMetaData.AddressDetails.Country\n      .AdministrativeArea.AdministrativeAreaName;\n\n  const request1 = `https://nominatim.openstreetmap.org/search?q=${oblast}&polygon=1&addressdetails=1&format=jsonv2`;\n\n  const response1 = await fetch(request1);\n  const json1 = await response1.json();\n  const cityTitle1 = json1[1].address.state;\n\n  return cityTitle1;\n}\n\nexport default { geoToCity, addressToGeo, getProvincyCenter };\n","import Api from \"../configs/Api.json\";\nimport Geocode from \"./Geocode\";\n\nclass Database {\n  static async getStations(city) {\n    let stations = {};\n    const cityId = city.id;\n    const wrapAPIKey = Api.wrapAPIKey;\n    const request = `https://wrapapi.com/use/iPagar/blood/stations/latest?city_id=${cityId}&wrapAPIKey=${wrapAPIKey}`;\n\n    const response = await fetch(request);\n    const json = await response.json();\n\n    stations = json.data.stations;\n\n    stations = stations.filter(\n      station =>\n        !(\n          station.title.toLowerCase().indexOf(\"закрыта\") !== -1 ||\n          station.title.toLowerCase().indexOf(\"закрыто\") !== -1\n        )\n    );\n\n    stations = await Promise.all(\n      stations.map(async station => {\n        if (station.address.search(/;/g) !== -1)\n          station.address = station.address\n            .split(\"\")\n            .reverse()\n            .join(\"\")\n            .split(\";\")[0]\n            .split(\"\")\n            .reverse()\n            .join(\"\");\n\n        let geo;\n        if (station.address.search(/`${city.title}`/g) === -1)\n          geo = await (await fetch(\n            `https://nominatim.openstreetmap.org/search?q=${city.title},${\n              station.address\n            }&format=json&accept-language=ru`\n          )).json();\n        else\n          geo = await (await fetch(\n            `https://nominatim.openstreetmap.org/search?q=${station.address}`\n          )).json();\n\n        if (geo[0]) {\n          station.lat = geo ? geo[0].lat : station.lat;\n          station.lng = geo ? geo[0].lon : station.lng;\n        }\n        return station;\n      })\n    );\n\n    // stations = await Promise.all(\n    //   stations.map(async station => {\n    //     const geo = await Geocode.addressToGeo(\n    //       city.title + \", \" + station.address\n    //     );\n    //     station.lat = geo ? geo[0] : station.lat;\n    //     station.lng = geo ? geo[1] : station.lng;\n    //     return station;\n    //   })\n    // );\n\n    return stations;\n  }\n\n  static async getCities(title) {\n    let cities = {};\n    const wrapAPIKey = Api.wrapAPIKey;\n    const request = `https://wrapapi.com/use/iPagar/blood/cities/latest?title=${title\n      .replace(/^[A-Za-z0-9]+$/, \"\")\n      .trim()}&wrapAPIKey=${wrapAPIKey}`;\n\n    const response = await fetch(request);\n    const json = await response.json();\n\n    cities = json.data ? json.data.cities : [];\n    return cities;\n  }\n}\n\nexport default Database;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Cell } from \"@vkontakte/vkui\";\n\nimport Icon24Chevron from \"@vkontakte/icons/dist/24/chevron\";\n\nconst maxDist = 200;\n\nclass StationsListCell extends React.Component {\n  showLength() {\n    let dist = this.props.data.dist;\n    if (dist < 1) {\n      dist = dist * 1000 + \" м\";\n    } else dist = Math.round(dist).toFixed() + \" км\";\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignContent: \"space-between\",\n          alignItems: \"center\"\n        }}\n      >\n        {this.props.data.dist <= maxDist && (\n          <div style={{ lineHeight: \"24px\" }}>{dist}</div>\n        )}\n        <Icon24Chevron\n          className=\"Cell__chevron\"\n          style={{ display: \"inline-block\" }}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Cell\n        multiline\n        description={this.props.data.address}\n        asideContent={this.showLength()}\n        onClick={() => this.props.city(this.props.data)}\n        size=\"l\"\n      >\n        <b>{this.props.data.title}</b>\n      </Cell>\n    );\n  }\n}\n\nStationsListCell.propTypes = {\n  data: PropTypes.shape({\n    address: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired\n  })\n};\n\nexport default StationsListCell;\n","function getDistance(lat1, lon1, lat2, lon2) {\n  var R = 6371;\n  var dLat = deg2rad(lat2 - lat1);\n  var dLon = deg2rad(lon2 - lon1);\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n\n  return Number(d.toFixed(2));\n}\n\nfunction deg2rad(degrees) {\n  const radians = degrees * (Math.PI / 180);\n\n  return radians;\n}\n\nexport default { getDistance };\n","import React from \"react\";\nimport {\n  Spinner,\n  Panel,\n  List,\n  PanelHeader,\n  HeaderButton,\n  View,\n  Search,\n  Div,\n  platform,\n  IOS,\n  Cell\n} from \"@vkontakte/vkui\";\nimport StationsListCell from \"../components/StationsListCell\";\nimport Loc from \"../resources/Loc\";\nimport Distance from \"../services/Distance\";\nimport DataManager from \"../services/DataManager\";\n\nimport Icon24Settings from \"@vkontakte/icons/dist/24/settings\";\n\nconst osname = platform();\n\nclass StationsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stations: [],\n      search: \"\"\n    };\n  }\n\n  onSearchChange = search => {\n    this.setState({ search });\n  };\n\n  get stations() {\n    const search = this.state.search.toLowerCase().trim();\n    const filteredStations = this.props.stations.filter(\n      station =>\n        station.title.toLowerCase().indexOf(search) > -1 ||\n        station.address.toLowerCase().indexOf(search) > -1\n    );\n\n    return filteredStations;\n  }\n\n  showPanelHeader() {\n    return (\n      <PanelHeader\n        left={\n          <HeaderButton onClick={() => this.props.history.push(\"findCity\")}>\n            <Icon24Settings />\n          </HeaderButton>\n        }\n      >\n        {Loc.FindStationsTitle}\n      </PanelHeader>\n    );\n  }\n\n  showStations() {\n    let listStations = [];\n\n    if (this.stations.length > 0) {\n      let stations = this.stations.map(station => {\n        if (this.props.geo) {\n          const dist = Distance.getDistance(\n            ...this.props.geo,\n            station.lat,\n            station.lng\n          );\n          station.dist = dist;\n        }\n\n        return station;\n      });\n\n      stations.sort((a, b) => {\n        if (a.dist > b.dist) {\n          return 1;\n        }\n        if (a.dist < b.dist) {\n          return -1;\n        }\n\n        return 0;\n      });\n\n      listStations = stations.map((station, i) => {\n        return (\n          <StationsListCell key={i} data={station} city={this.props.city} />\n        );\n      });\n    }\n\n    return (\n      <React.Fragment>\n        <Search\n          value={this.state.search}\n          onChange={this.onSearchChange}\n          maxLength=\"150\"\n        />\n        {listStations.length > 0 && <List>{listStations}</List>}\n        {listStations.length === 0 && (\n          <Cell>\n            <Div align=\"center\">\n              {osname === IOS\n                ? Loc.NothingFindText\n                : Loc.NothingFindTextAndroid}\n            </Div>\n          </Cell>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  componentDidMount() {\n    if (DataManager.getSearch())\n      this.setState({ search: DataManager.getSearch() });\n  }\n\n  componentWillUnmount() {\n    DataManager.setSearch(this.state.search);\n  }\n\n  showSpinner() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        <Spinner size=\"medium\" style={{ marginTop: 20 }} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <View popout={this.props.popout} activePanel=\"stationsList\">\n        <Panel id=\"stationsList\">\n          {this.showPanelHeader()}\n          {this.props.stations.length > 0 && this.showStations()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nexport default StationsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Panel,\n  PanelHeader,\n  HeaderButton,\n  View,\n  Alert,\n  Spinner\n} from \"@vkontakte/vkui\";\nimport VKConnect from \"@vkontakte/vkui-connect\";\nimport { Map, Placemark, Clusterer } from \"react-yandex-maps\";\nimport DataManager from \"../services/DataManager\";\nimport Loc from \"../resources/Loc\";\nimport Geocode from \"../services/Geocode\";\n\nimport Icon24Locate from \"@vkontakte/icons/dist/24/locate\";\n\nclass StationsMap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      styleMap: {\n        display: \"flex\",\n        flexGrow: \"1\",\n        width: \"100%\"\n      },\n      map: null,\n      geo: \"\",\n      zoom: 12,\n      isLoading: true,\n      isLoadingMap: true,\n      userGeo: \"\",\n      isPanning: false,\n      stations: \"\"\n    };\n  }\n\n  geoSubscribe = async e => {\n    switch (e.detail.type) {\n      case \"VKWebAppGeodataResult\":\n        if (e.detail.data.available) {\n          DataManager.setGeo(e.detail.data.lat, e.detail.data.long);\n          const city = await Geocode.geoToCity(DataManager.getGeo());\n          DataManager.setUserCity(city);\n          this.setState({ userGeo: DataManager.getGeo(), isPanning: true });\n          this.state.map\n            .panTo(this.state.userGeo)\n            .then(() => this.setState({ isPanning: false }));\n        } else {\n          DataManager.setGeo(null, null);\n          this.setState({ userGeo: DataManager.getGeo() });\n          DataManager.setUserCity(null);\n          this.setState({\n            popout: (\n              <Alert\n                actions={[\n                  {\n                    title: \"Ок\",\n                    autoclose: true,\n                    style: \"primary\"\n                  }\n                ]}\n                onClose={() => this.setState({ popout: null })}\n              >\n                <h2>Геопозиция отключена</h2>\n                <p>Включите геопозицию в настройках Вашего телефона</p>\n              </Alert>\n            )\n          });\n        }\n        break;\n      case \"VKWebAppGeodataFailed\":\n        this.setState({\n          popout: (\n            <Alert\n              actions={[\n                {\n                  title: \"Ок\",\n                  autoclose: true,\n                  style: \"primary\"\n                }\n              ]}\n              onClose={() => this.setState({ popout: null })}\n            >\n              <p>Не удалось получить геопозицию</p>\n            </Alert>\n          )\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  onClickHeaderButton = () => {\n    VKConnect.subscribe(this.geoSubscribe);\n    VKConnect.send(\"VKWebAppGetGeodata\", {});\n  };\n\n  showPanelHeader() {\n    return (\n      <PanelHeader\n        left={\n          <HeaderButton onClick={this.onClickHeaderButton}>\n            <Icon24Locate />\n          </HeaderButton>\n        }\n      >\n        {Loc.FindStationsTitle}\n      </PanelHeader>\n    );\n  }\n\n  setMapRef = map => {\n    if (this._isMounted) this.setState({ map });\n  };\n\n  setPlacemarks() {\n    const stations = this.props.stations.map((station, i) => (\n      <Placemark\n        key={i}\n        onClick={() => {\n          this.props.city(station);\n        }}\n        geometry={[station.lat, station.lng]}\n        options={{\n          iconLayout: \"default#image\",\n          iconImageHref:\n            \"https://raw.githubusercontent.com/iPagar/donate-blood/master/src/img/heart.png\",\n          iconImageSize: [36, 36],\n          iconImageOffset: [-18, -36]\n        }}\n      />\n    ));\n\n    this.setState({ Stations: stations });\n  }\n\n  mapOnLoad = () => {\n    this.setState({ isLoadingMap: false });\n  };\n\n  showMap() {\n    const { geo, zoom, Stations, isLoading, isLoadingMap } = this.state;\n\n    const mapState = {\n      center: geo,\n      zoom: zoom\n    };\n    const mapOptions = {\n      yandexMapDisablePoiInteractivity: true,\n      suppressMapOpenBlock: true\n    };\n\n    return (\n      <div style={this.state.styleMap}>\n        {isLoadingMap && this.showSpinner()}\n        {!isLoading && (\n          <Map\n            style={this.state.styleMap}\n            defaultState={mapState}\n            defaultOptions={mapOptions}\n            instanceRef={this.setMapRef}\n            onLoad={this.mapOnLoad}\n          >\n            <Clusterer\n              options={{\n                preset: \"islands#redClusterIcons\",\n                clusterIconColor: \"#f60808\",\n                groupByCoordinates: false,\n                useMapMargin: true,\n                gridSize: 128,\n                margin: 10,\n                hasBalloon: false,\n                hasHint: false,\n                zoomMargin: 36\n              }}\n            >\n              {Stations.map(station => station)}\n            </Clusterer>\n            <Placemark\n              geometry={this.state.userGeo}\n              options={{\n                preset: \"islands#geolocationIcon\",\n                iconColor: \"#f60808\"\n              }}\n            />\n          </Map>\n        )}\n      </div>\n    );\n  }\n\n  async setGeo() {\n    this.setState({ isLoading: true });\n    const actualMapState = DataManager.getMapState();\n\n    if (actualMapState) {\n      //не меняем карту\n      this.setState({ geo: actualMapState.center });\n      this.setState({ zoom: actualMapState.zoom });\n    } else if (DataManager.getCity().title === DataManager.getUserCity()) {\n      //показываем геопозицию пользователя\n      this.setState({ geo: DataManager.getGeo(), zoom: 14 });\n    } else {\n      //показываем на центр города\n      let geo = await Geocode.addressToGeo(DataManager.getCity().title);\n\n      this.setState({\n        geo,\n        zoom: 12\n      });\n    }\n    this.setState({ userGeo: DataManager.getGeo(), isLoading: false });\n  }\n\n  setMap() {\n    if (this.state.map) {\n      let mapState = {\n        center: this.state.map.getCenter(),\n        zoom: this.state.map.getZoom()\n      };\n\n      DataManager.setMapState(mapState);\n    }\n  }\n\n  showSpinner() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          margin: \"auto\",\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0\n        }}\n      >\n        <Spinner size=\"medium\" />\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    VKConnect.unsubscribe(this.geoSubscribe);\n    this.setMap();\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setGeo();\n    this.setPlacemarks();\n  }\n\n  render() {\n    return (\n      <View popout={this.state.popout} activePanel=\"stationsMap\">\n        <Panel id=\"stationsMap\" centered>\n          {this.showPanelHeader()}\n          {this.showMap()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nStationsMap.propTypes = {\n  stations: PropTypes.array.isRequired\n};\n\nexport default StationsMap;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Cell, Div, Group } from \"@vkontakte/vkui\";\n\nimport Icon16Dropdown from \"@vkontakte/icons/dist/16/dropdown\";\n\nclass Topic extends React.Component {\n  state = {\n    visibleText: false,\n    icon: (\n      <Icon16Dropdown\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }}\n      />\n    ),\n    text: null\n  };\n\n  handleTitleClick = e => {\n    // e.currentTarget.children[0].className = `Tappable Tappable--ios Cell__in Tappable--inactive`;\n    // console.log(e.currentTarget.children[0].className);\n    let icon = (\n      <Icon16Dropdown\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          transform: \"rotate(180deg)\"\n        }}\n      />\n    );\n    let text = this.props.data.text;\n\n    if (this.state.visibleText) {\n      icon = (\n        <Icon16Dropdown\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          }}\n        />\n      );\n\n      text = null;\n    }\n\n    this.setState({ visibleText: !this.state.visibleText, text, icon });\n  };\n\n  showText() {\n    const text = this.state.text.map((textData, i) => (\n      <Div key={i}>{this.state.text[i]}</Div>\n    ));\n\n    return text;\n  }\n\n  render() {\n    const { title } = this.props.data;\n    return (\n      <div>\n        <Cell multiline size=\"l\" onClick={this.handleTitleClick}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            }}\n          >\n            <b>{title}</b> {this.state.icon}\n          </div>\n        </Cell>\n        {this.state.visibleText && this.showText()}\n      </div>\n    );\n  }\n}\n\nTopic.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    text: PropTypes.array.isRequired\n  })\n};\n\nexport default Topic;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Topic from \"../components/Topic\";\nimport Topics from \"../resources/Topics\";\nimport { Panel, PanelHeader, Group, List, View } from \"@vkontakte/vkui\";\n\nimport Loc from \"../resources/Loc\";\n\nclass About extends React.Component {\n  showTopics() {\n    const topics = Topics.map((topic, i) => {\n      return <Topic key={i} data={topic} />;\n    });\n    return (\n      <Group>\n        <List>{topics}</List>\n      </Group>\n    );\n  }\n\n  showPanelHeader() {\n    return <PanelHeader>{Loc.SettingsAboutTitle}</PanelHeader>;\n  }\n\n  render() {\n    return (\n      <View activePanel=\"aboutDonationPanel\">\n        <Panel id=\"aboutDonationPanel\">\n          {this.showPanelHeader()}\n          {this.showTopics()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nAbout.propTypes = {\n  welcome: PropTypes.bool\n};\n\nexport default About;\n","import React from \"react\";\nimport VKConnect, { response as res } from \"@vkontakte/vkui-connect\";\nimport DataManager from \"../services/DataManager\";\nimport Database from \"../services/Database\";\nimport Geocode from \"../services/Geocode\";\nimport Loc from \"../resources/Loc\";\nimport {\n  Epic,\n  Tabbar,\n  TabbarItem,\n  ScreenSpinner,\n  Alert\n} from \"@vkontakte/vkui\";\nimport Icon28Place from \"@vkontakte/icons/dist/28/place\";\nimport Icon28Search from \"@vkontakte/icons/dist/28/search\";\nimport Icon28HelpOutline from \"@vkontakte/icons/dist/28/help_outline\";\n\nimport StationsList from \"./StationsList\";\nimport StationsMap from \"./StationsMap\";\nimport AboutDonation from \"./AboutDonation\";\n\n// res.VKWebAppGetUserInfo.data = {\n//   type: \"VKWebAppGeodataResult\",\n//   data: {\n//     available: 1,\n//     lat: \"55.86647\",\n//     long: \"38.443\"\n//   }\n// };\n\nclass FindStations extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeView: \"findStations\",\n      activeStory: \"stationsList\",\n      isLoading: false,\n      styleTabButton: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      stations: [],\n      popout: null\n    };\n  }\n\n  onStoryChange = e => {\n    this.setState({ activeStory: e.currentTarget.dataset.story });\n    this.props.history.replace(\"?\" + e.currentTarget.dataset.story);\n  };\n\n  showTabbar = () => {\n    return (\n      <Tabbar>\n        <TabbarItem\n          onClick={this.onStoryChange}\n          selected={this.state.activeStory === \"stationsList\"}\n          data-story=\"stationsList\"\n        >\n          <div style={this.state.styleTabButton}>\n            <Icon28Search />\n          </div>\n        </TabbarItem>\n        <TabbarItem\n          onClick={this.onStoryChange}\n          selected={this.state.activeStory === \"stationsMap\"}\n          data-story=\"stationsMap\"\n        >\n          <div style={this.state.styleTabButton}>\n            <Icon28Place />\n          </div>\n        </TabbarItem>\n        <TabbarItem\n          onClick={this.onStoryChange}\n          selected={this.state.activeStory === \"aboutDonation\"}\n          data-story=\"aboutDonation\"\n        >\n          <div style={this.state.styleTabButton}>\n            <Icon28HelpOutline />\n          </div>\n        </TabbarItem>\n      </Tabbar>\n    );\n  };\n\n  async setCity() {\n    this.setState({ isLoading: true, popout: <ScreenSpinner /> });\n\n    const city = await Geocode.geoToCity(DataManager.getGeo());\n    DataManager.setUserCity(city);\n    const cities = await Database.getCities(DataManager.getUserCity());\n    if (cities.length > 0) {\n      const stations = await Database.getStations(cities[0]);\n\n      if (stations.length > 0) {\n        DataManager.setCity(cities[0]);\n        DataManager.setStations(stations);\n        this.setState({ stations });\n        this.setState({ isLoading: false, popout: null });\n      } else {\n        const center = await Geocode.getProvincyCenter(DataManager.getGeo());\n        const cities = await Database.getCities(center);\n        const stations = await Database.getStations(cities[0]);\n\n        if (cities.length > 0 && stations.length > 0) {\n          DataManager.setCity(cities[0]);\n          DataManager.setStations(stations);\n          this.setState({ stations });\n          this.setState({ isLoading: false, popout: null });\n        } else {\n          this.openEmptySheet(Loc.EmptySheetTitle);\n        }\n      }\n    } else this.openEmptySheet(Loc.EmptySheetTitle);\n  }\n\n  setStations = () => {\n    this.setState({\n      stations: DataManager.getStations()\n    });\n  };\n\n  geoSubscribe = e => {\n    switch (e.detail.type) {\n      case \"VKWebAppGeodataResult\":\n        if (e.detail.data.available) {\n          DataManager.setGeo(e.detail.data.lat, e.detail.data.long);\n\n          this.setCity();\n        } else this.openEmptySheet(Loc.GetGeoError);\n        break;\n      case \"VKWebAppGeodataFailed\":\n        this.openEmptySheet(Loc.GetGeoError);\n        break;\n      default:\n        break;\n    }\n  };\n\n  getCity() {\n    if (DataManager.getCity() === null) {\n      VKConnect.subscribe(this.geoSubscribe);\n      VKConnect.send(\"VKWebAppGetGeodata\", {});\n    } else {\n      this.setStations();\n    }\n  }\n\n  openEmptySheet(text) {\n    const { history } = this.props;\n\n    if (this._isMounted)\n      this.setState({\n        popout: (\n          <Alert\n            actions={[\n              {\n                title: Loc.EmptySheetActionTitle,\n                autoclose: true,\n                style: \"default\"\n              }\n            ]}\n            onClose={() => {\n              this.setState({ popout: null });\n              history.replace(\"findCityNecessarily\");\n            }}\n          >\n            <h2>{text}</h2>\n          </Alert>\n        )\n      });\n  }\n\n  city = city => {\n    DataManager.setStation(city);\n    this.props.history.push(\"station\");\n  };\n\n  componentWillUnmount() {\n    VKConnect.unsubscribe(this.geoSubscribe);\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    if (this.props.location.search)\n      this.setState({ activeStory: this.props.location.search.slice(1) });\n\n    this.getCity();\n  }\n\n  render() {\n    return (\n      <Epic activeStory={this.state.activeStory} tabbar={this.showTabbar()}>\n        <StationsList\n          popout={this.state.popout}\n          id=\"stationsList\"\n          history={this.props.history}\n          stations={this.state.stations}\n          city={this.city}\n          geo={DataManager.getGeo()}\n        />\n        <StationsMap\n          popout={this.state.popout}\n          id=\"stationsMap\"\n          stations={this.state.stations}\n          city={this.city}\n        />\n        <AboutDonation popout={this.state.popout} id=\"aboutDonation\" />\n      </Epic>\n    );\n  }\n}\n\nFindStations.propTypes = {};\n\nexport default FindStations;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Cell } from \"@vkontakte/vkui\";\n\nclass FindCityCell extends React.Component {\n  onClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  render() {\n    let description;\n    if (this.props.data.region) description = this.props.data.region.title;\n    return (\n      <Cell description={description} onClick={this.onClick}>\n        {!description && (\n          <div style={{ lineHeight: \"39px\" }}>{this.props.data.title}</div>\n        )}\n        {description && this.props.data.title}\n      </Cell>\n    );\n  }\n}\n\nFindCityCell.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired\n  })\n};\n\nexport default FindCityCell;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Database from \"../services/Database\";\nimport FindCityCell from \"../components/FindCityCell\";\nimport DataManager from \"../services/DataManager\";\nimport Loc from \"../resources/Loc\";\nimport {\n  Panel,\n  PanelHeader,\n  HeaderButton,\n  platform,\n  IOS,\n  Search,\n  List,\n  Spinner,\n  Div,\n  View,\n  Cell,\n  Alert,\n  ScreenSpinner\n} from \"@vkontakte/vkui\";\n\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\nconst osname = platform();\n\nclass FindCity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      isLoading: false,\n      cities: [],\n      popout: null\n    };\n  }\n\n  onChange = async search => {\n    if (this._isMounted) {\n      this.setState({ search });\n      await this.updateCities();\n    }\n  };\n\n  async updateCities() {\n    await this.setState({ isLoading: true });\n    const { search } = this.state;\n    const cities = await Database.getCities(search);\n\n    if (search === this.state.search)\n      await this.setState({ cities, isLoading: false });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.updateCities();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  showSpinner() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        <Spinner size=\"medium\" style={{ marginTop: 20 }} />\n      </div>\n    );\n  }\n\n  onCellClick = async data => {\n    this.setState({ popout: <ScreenSpinner /> });\n    const stations = await Database.getStations(data);\n\n    if (stations.length > 0) {\n      if (this._isMounted) {\n        DataManager.setCity(data);\n        DataManager.setStations(stations);\n        this.setState({ popout: null });\n      }\n      if (this.props.necessarily) this.props.history.push(\"findStations\");\n      else this.props.history.goBack();\n    } else this.openEmptySheet(Loc.EmptySheetTitle);\n  };\n\n  openEmptySheet(text) {\n    if (this._isMounted)\n      this.setState({\n        popout: (\n          <Alert\n            actions={[\n              {\n                title: Loc.EmptySheetActionTitle,\n                autoclose: true,\n                style: \"default\"\n              }\n            ]}\n            onClose={() => {\n              this.setState({ popout: null });\n            }}\n          >\n            <h2>{text}</h2>\n          </Alert>\n        )\n      });\n  }\n\n  showCities() {\n    const listCities = this.state.cities.map(city => {\n      return (\n        <FindCityCell key={city.id} data={city} onClick={this.onCellClick} />\n      );\n    });\n\n    return (\n      <React.Fragment>\n        {listCities.length > 0 && <List>{listCities}</List>}\n        {listCities.length === 0 && (\n          <Cell>\n            <Div align=\"center\">\n              {osname === IOS\n                ? Loc.NothingFindText\n                : Loc.NothingFindTextAndroid}\n            </Div>\n          </Cell>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showSearch() {\n    return (\n      <Search\n        value={this.state.search}\n        onChange={this.onChange}\n        maxLength=\"30\"\n      />\n    );\n  }\n\n  showPanelHeader() {\n    let headerButton = (\n      <HeaderButton onClick={this.props.history.goBack}>\n        {osname === IOS ? \"Отмена\" : <Icon24Back />}\n      </HeaderButton>\n    );\n\n    if (this.props.necessarily) headerButton = \" \";\n\n    return (\n      <PanelHeader noShadow left={headerButton}>\n        {Loc.FindCityTitle}\n      </PanelHeader>\n    );\n  }\n\n  render() {\n    return (\n      <View activePanel=\"findCityPanel\" popout={this.state.popout}>\n        <Panel id=\"findCityPanel\">\n          {this.showPanelHeader()}\n          {this.showSearch()}\n          {!this.state.isLoading && this.showCities()}\n          {this.state.isLoading && this.showSpinner()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nFindCity.propTypes = {\n  history: PropTypes.object.isRequired\n};\n\nexport default FindCity;\n","import React from \"react\";\nimport { Map, Placemark } from \"react-yandex-maps\";\nimport {\n  Panel,\n  HeaderButton,\n  PanelHeader,\n  View,\n  Group,\n  Cell,\n  List,\n  Link,\n  Spinner,\n  platform,\n  IOS\n} from \"@vkontakte/vkui\";\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\nimport Loc from \"../resources/Loc\";\nimport DataManager from \"../services/DataManager\";\n\nimport { findNumbers } from \"libphonenumber-js\";\n\nimport Icon24Place from \"@vkontakte/icons/dist/24/place\";\nimport Icon24Globe from \"@vkontakte/icons/dist/24/globe\";\nimport Icon24Phone from \"@vkontakte/icons/dist/24/phone\";\nimport Icon24Recent from \"@vkontakte/icons/dist/24/recent\";\n\nconst osname = platform();\n\nclass Station extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      styleMap: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignContent: \"space-between\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"300px\"\n      },\n      isLoadingMap: true,\n      station: DataManager.getStation()\n    };\n  }\n\n  showPanelHeader() {\n    const { history } = this.props;\n\n    return (\n      <PanelHeader\n        left={\n          <HeaderButton onClick={history.goBack}>\n            {osname === IOS ? \"Отмена\" : <Icon24Back />}\n          </HeaderButton>\n        }\n      >\n        {Loc.StationTitle}\n      </PanelHeader>\n    );\n  }\n\n  mapOnLoad = () => {\n    this.setState({ isLoadingMap: false });\n  };\n\n  showMap() {\n    const zoom = 16;\n\n    const mapState = {\n      center: [this.state.station.lat, this.state.station.lng],\n      zoom: zoom\n    };\n\n    const mapOptions = {\n      yandexMapDisablePoiInteractivity: true,\n      suppressMapOpenBlock: true\n    };\n\n    return (\n      <div>\n        {this.state.isLoadingMap && this.showSpinner()}\n        <Map\n          defaultOptions={mapOptions}\n          style={this.state.styleMap}\n          defaultState={mapState}\n          onLoad={this.mapOnLoad}\n        >\n          <Placemark\n            geometry={[this.state.station.lat, this.state.station.lng]}\n            options={{\n              iconLayout: \"default#image\",\n              iconImageHref:\n                \"https://raw.githubusercontent.com/iPagar/donate-blood/master/src/img/heart.png\",\n              iconImageSize: [36, 36],\n              iconImageOffset: [-18, -36]\n            }}\n          />\n          <Placemark\n            geometry={DataManager.getGeo()}\n            options={{\n              preset: \"islands#geolocationIcon\",\n              iconColor: \"#f60808\"\n            }}\n          />\n        </Map>\n      </div>\n    );\n  }\n\n  showSite() {\n    return (\n      <React.Fragment>\n        {this.state.station.site.length > 0 && (\n          <Group title=\"Сайт\">\n            <List>\n              <Cell multiline before={<Icon24Globe />}>\n                <Link\n                  href={\n                    this.state.station.site.includes(\"http\")\n                      ? `${this.state.station.site}`\n                      : `//${this.state.station.site}`\n                  }\n                  target=\"_blank\"\n                >\n                  {this.state.station.site}\n                </Link>\n              </Cell>\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showEmail() {\n    return (\n      <React.Fragment>\n        {this.state.station.email.length > 0 && (\n          <Group title=\"E-mail\">\n            <List>\n              <Cell multiline before={<Icon24Globe />}>\n                <Link href={this.state.station.site}>\n                  {this.state.station.site}\n                </Link>\n              </Cell>\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showWorkTime() {\n    return (\n      <React.Fragment>\n        {this.state.station.worktime.length > 0 && (\n          <Group title=\"Время работы\">\n            <List>\n              <Cell multiline before={<Icon24Recent />}>\n                {this.state.station.worktime}\n              </Cell>\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showTel() {\n    let tels = [];\n    if (this.state.station.phones.length > 0)\n      findNumbers(this.state.station.phones, \"RU\", {\n        v2: true\n      }).map(tel => tels.push(tel.number.formatNational()));\n\n    return (\n      <React.Fragment>\n        {tels.length > 0 && (\n          <Group title=\"Контакты\">\n            <List>\n              {tels.map((tel, i) => (\n                <Cell key={i} before={<Icon24Phone />}>\n                  <Link href={`tel:${tel}`}>{tel}</Link>\n                </Cell>\n              ))}\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showAddress() {\n    return (\n      <Group title={this.state.station.title}>\n        <List>\n          <Cell multiline before={<Icon24Place />}>\n            <Link\n              href={`//maps.yandex.ru/?text=${this.state.station.city.title}, ${\n                this.state.station.address\n              }`}\n            >\n              {this.state.station.address}\n            </Link>\n          </Cell>\n        </List>\n      </Group>\n    );\n  }\n\n  showInfo() {\n    return (\n      <React.Fragment>\n        {this.showAddress()}\n        {this.showWorkTime()}\n        {this.showTel()}\n        {this.showSite()}\n      </React.Fragment>\n    );\n  }\n\n  showSpinner() {\n    return (\n      <div style={this.state.styleMap}>\n        <Spinner size=\"medium\" />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <View activePanel=\"station\" popout={this.state.popout}>\n        <Panel id=\"station\">\n          {this.showPanelHeader()}\n          {this.showMap()}\n          {this.showInfo()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nexport default Station;\n","import React from \"react\";\nimport VKConnect from \"@vkontakte/vkui-connect\";\nimport { Root, View } from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./resources/ui.css\";\nimport { Route, withRouter } from \"react-router-dom\";\n\nimport FindStations from \"./panels/FindStations\";\nimport FindCity from \"./panels/FindCity\";\nimport Station from \"./panels/Station\";\n\nclass App extends React.Component {\n  state = { isLoading: false };\n\n  getTheme() {\n    VKConnect.subscribe(e => {\n      switch (e.detail.type) {\n        case \"VKWebAppUpdateConfig\":\n          let schemeAttribute = document.createAttribute(\"scheme\");\n          schemeAttribute.value = e.detail.data.scheme\n            ? e.detail.data.scheme\n            : \"client_light\";\n          document.body.attributes.setNamedItem(schemeAttribute);\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  async setInitialView() {\n    await this.setState({ isLoading: true });\n\n    this.props.history.replace(\"findStations\");\n\n    await this.setState({ isLoading: false });\n  }\n\n  componentDidMount() {\n    this.setInitialView();\n    this.getTheme();\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    const activeView = this.props.location.pathname.slice(1);\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        {!isLoading && (\n          <Root activeView={activeView}>\n            <Route id=\"findStations\" component={FindStations} />\n            <Route id=\"station\" component={Station} />\n            <Route id=\"findCity\" component={FindCity} />\n            <Route\n              id=\"findCityNecessarily\"\n              render={() => (\n                <View activePanel=\"findCityPanel\">\n                  <FindCity\n                    id=\"findCityPanel\"\n                    history={this.props.history}\n                    necessarily\n                  />\n                </View>\n              )}\n            />\n          </Root>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import \"core-js/es6/map\";\nimport \"core-js/es6/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport connect from \"@vkontakte/vkui-connect\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { YMaps } from \"react-yandex-maps\";\n\n// Init VK App\nconnect.send(\"VKWebAppInit\", {});\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<YMaps>\n\t\t\t<App />\n\t\t</YMaps>\n\t</HashRouter>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}