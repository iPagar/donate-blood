{"version":3,"sources":["services/DataManager.js","services/Geocode.js","services/Distance.js","services/Database.js","components/StationsListCell.js","panels/StationsList.js","panels/StationsMap.js","components/Topic.js","panels/AboutDonation.js","panels/FindStations.js","components/FindCityCell.js","panels/FindCity.js","panels/Station.js","App.js","index.js"],"names":["DataManager","mapState","sessionStorage","setItem","JSON","stringify","parse","getItem","search","city","this","setSearch","setMapState","userCity","lat","long","geo","Number","station","stations","_callee","apiKey","request","response","json","cityTitle","regenerator_default","a","wrap","_context","prev","next","Api","ApiYandex","concat","fetch","sent","GeoObjectCollection","featureMember","GeoObject","name","abrupt","stop","_callee2","address","geoData","_context2","Point","pos","substr","split","_callee3","oblast","request1","response1","json1","cityTitle1","_context3","metaDataProperty","GeocoderMetaData","AddressDetails","Country","AdministrativeArea","AdministrativeAreaName","state","Geocode","geoToCity","addressToGeo","getProvincyCenter","deg2rad","degrees","Math","PI","Distance","getDistance","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","c","atan2","sqrt","toFixed","Database","cityId","id","wrapAPIKey","data","filter","title","toLowerCase","indexOf","Promise","all","map","_ref","Object","asyncToGenerator","mark","lng","reverse","join","country","result","features","geometry","geometries","coordinates","_x2","apply","arguments","cities","replace","trim","StationsListCell","dist","props","round","react_default","createElement","style","display","justifyContent","alignContent","alignItems","lineHeight","chevron_default","className","_this","vkui","multiline","description","asideContent","showLength","onClick","size","React","Component","osname","platform","StationsList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","setState","_this2","left","history","push","settings_default","Loc","FindStationsTitle","_this3","listStations","length","toConsumableArray","sort","b","i","components_StationsListCell","key","Fragment","value","onChange","maxLength","align","IOS","NothingFindText","NothingFindTextAndroid","getSearch","flexDirection","marginTop","popout","activePanel","showPanelHeader","showStations","StationsMap","geoSubscribe","e","t0","detail","type","available","setGeo","getGeo","setUserCity","userGeo","isPanning","panTo","then","actions","autoclose","onClose","_x","onClickHeaderButton","VKConnect","subscribe","send","setMapRef","_isMounted","mapOnLoad","isLoadingMap","styleMap","flexGrow","width","zoom","isLoading","locate_default","react_yandex_maps_umd_production_min","options","iconLayout","iconImageHref","iconImageSize","iconImageOffset","Stations","_this$state","center","showSpinner","defaultState","defaultOptions","yandexMapDisablePoiInteractivity","suppressMapOpenBlock","instanceRef","onLoad","preset","clusterIconColor","groupByCoordinates","useMapMargin","gridSize","margin","hasBalloon","hasHint","zoomMargin","iconColor","actualMapState","getMapState","getCity","getUserCity","getCenter","getZoom","position","top","bottom","right","unsubscribe","setMap","setPlacemarks","centered","showMap","Topic","visibleText","icon","dropdown_default","text","handleTitleClick","transform","textData","showText","About","topics","Topics","topic","components_Topic","SettingsAboutTitle","showTopics","FindStations","onStoryChange","activeStory","currentTarget","dataset","story","showTabbar","selected","data-story","styleTabButton","search_default","place_default","help_outline_default","setStations","getStations","setCity","openEmptySheet","GetGeoError","setStation","activeView","getCities","EmptySheetTitle","EmptySheetActionTitle","location","slice","tabbar","panels_StationsList","panels_StationsMap","AboutDonation","FindCityCell","region","FindCity","updateCities","onCellClick","_ref2","necessarily","goBack","listCities","components_FindCityCell","headerButton","back_default","noShadow","FindCityTitle","showSearch","showCities","Station","height","getStation","StationTitle","site","before","globe_default","href","includes","target","email","worktime","recent_default","tels","phones","findNumbers","v2","tel","number","formatNational","phone_default","_24_place_default","showAddress","showWorkTime","showTel","showSite","showInfo","App","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","setInitialView","getTheme","pathname","Route","component","render","panels_FindCity","withRouter","connect","ReactDOM","HashRouter","src_App","getElementById"],"mappings":"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","file":"static/js/main.17f6a0c5.chunk.js","sourcesContent":["class DataManager {\n  static setMapState(mapState) {\n    sessionStorage.setItem(\"mapState\", JSON.stringify(mapState));\n  }\n\n  static getMapState() {\n    const mapState = JSON.parse(sessionStorage.getItem(\"mapState\"));\n\n    return mapState;\n  }\n\n  static setSearch(search) {\n    sessionStorage.setItem(\"search\", JSON.stringify(search));\n  }\n\n  static getSearch() {\n    const search = JSON.parse(sessionStorage.getItem(\"search\"));\n\n    return search;\n  }\n\n  static async setCity(city) {\n    sessionStorage.setItem(\"city\", JSON.stringify(city));\n\n    this.setSearch(\"\");\n    this.setMapState(null);\n  }\n\n  static getCity() {\n    const city = JSON.parse(sessionStorage.getItem(\"city\"));\n\n    return city;\n  }\n\n  static setUserCity(userCity) {\n    sessionStorage.setItem(\"userCity\", JSON.stringify(userCity));\n  }\n\n  static getUserCity() {\n    const userCity = JSON.parse(sessionStorage.getItem(\"userCity\"));\n\n    return userCity;\n  }\n\n  static setGeo(lat, long) {\n    const geo = JSON.stringify([Number(lat), Number(long)]);\n\n    sessionStorage.setItem(\"geo\", geo);\n  }\n\n  static getGeo() {\n    const geo = JSON.parse(sessionStorage.getItem(\"geo\"));\n\n    return geo;\n  }\n\n  static setStation(station) {\n    sessionStorage.setItem(\"station\", JSON.stringify(station));\n  }\n\n  static getStation() {\n    const station = JSON.parse(sessionStorage.getItem(\"station\"));\n\n    return station;\n  }\n\n  static setStations(stations) {\n    sessionStorage.setItem(\"stations\", JSON.stringify(stations));\n  }\n\n  static getStations() {\n    const stations = JSON.parse(sessionStorage.getItem(\"stations\"));\n\n    return stations;\n  }\n}\n\nexport default DataManager;\n","import Api from \"../configs/Api.json\";\n\nasync function geoToCity(geo) {\n  const apiKey = Api.ApiYandex;\n  const kind = \"locality\";\n  const format = \"json\";\n  const sco = \"latlong\";\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&sco=${sco}&results=1&format=${format}&kind=${kind}&geocode=${geo}`;\n\n  const response = await fetch(request);\n  const json = await response.json();\n\n  const cityTitle =\n    json.response.GeoObjectCollection.featureMember[0].GeoObject.name;\n  return cityTitle;\n}\n\nasync function addressToGeo(address) {\n  const apiKey = Api.ApiYandex;\n  const format = \"json\";\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&results=1&format=${format}&geocode=${address}`;\n\n  const response = await fetch(request);\n  const json = await response.json();\n\n  const geoData = json.response.GeoObjectCollection.featureMember[0]\n    ? JSON.stringify(\n        json.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos\n      )\n        .substr(1, 17)\n        .split(\" \")\n    : null;\n\n  const geo = geoData ? [geoData[1], geoData[0]] : null;\n\n  return geo;\n}\n\nasync function getProvincyCenter(geo) {\n  const apiKey = Api.ApiYandex;\n  const kind = \"locality\";\n  const format = \"json\";\n  const sco = \"latlong\";\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&sco=${sco}&results=1&format=${format}&kind=${kind}&geocode=${geo}`;\n\n  const response = await fetch(request);\n  const json = await response.json();\n\n  const oblast =\n    json.response.GeoObjectCollection.featureMember[0].GeoObject\n      .metaDataProperty.GeocoderMetaData.AddressDetails.Country\n      .AdministrativeArea.AdministrativeAreaName;\n\n  const request1 = `https://nominatim.openstreetmap.org/search?q=${oblast}&polygon=1&addressdetails=1&format=jsonv2`;\n\n  const response1 = await fetch(request1);\n  const json1 = await response1.json();\n  const cityTitle1 = json1[1].address.state;\n\n  return cityTitle1;\n}\n\nexport default { geoToCity, addressToGeo, getProvincyCenter };\n","function getDistance(lat1, lon1, lat2, lon2) {\n  var R = 6371;\n  var dLat = deg2rad(lat2 - lat1);\n  var dLon = deg2rad(lon2 - lon1);\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n\n  return Number(d.toFixed(2));\n}\n\nfunction deg2rad(degrees) {\n  const radians = degrees * (Math.PI / 180);\n\n  return radians;\n}\n\nexport default { getDistance };\n","import Api from \"../configs/Api.json\";\nimport Geocode from \"./Geocode\";\nimport DataManager from \"./DataManager\";\nimport Distance from \"./Distance\";\n\nclass Database {\n  static async getStations(city) {\n    let stations = {};\n    const cityId = city.id;\n    const wrapAPIKey = Api.wrapAPIKey;\n    const request = `https://wrapapi.com/use/iPagar/blood/stations/latest?city_id=${cityId}&wrapAPIKey=${wrapAPIKey}`;\n\n    const response = await fetch(request);\n    const json = await response.json();\n\n    stations = json.data.stations;\n\n    stations = stations.filter(\n      station =>\n        !(\n          station.title.toLowerCase().indexOf(\"закрыта\") !== -1 ||\n          station.title.toLowerCase().indexOf(\"закрыто\") !== -1\n        )\n    );\n\n    stations = await Promise.all(\n      stations.map(async station => {\n        if (station.address.search(/;/g) !== -1)\n          station.address = station.address\n            .split(\"\")\n            .reverse()\n            .join(\"\")\n            .split(\";\")[0]\n            .split(\"\")\n            .reverse()\n            .join(\"\");\n\n        let geo;\n        if (city.country.title === \"Россия\") {\n          geo = await (await fetch(\n            `https://cors.io/?http://search.maps.sputnik.ru/search/addr?q=${(city\n              .country.title,\n            city.title)}`\n          )).json();\n\n          if (geo.result.address) {\n            let lat =\n              geo.result.address[0].features[0].geometry.geometries[0]\n                .coordinates[1];\n            let lng =\n              geo.result.address[0].features[0].geometry.geometries[0]\n                .coordinates[0];\n\n            if (Distance.getDistance(lat, lng, station.lat, station.lng) < 1) {\n              geo = await (await fetch(\n                `https://cors.io/?http://search.maps.sputnik.ru/search/addr?q=${\n                  city.country.title\n                },${city.title},${station.address}`\n              )).json();\n              lat =\n                geo.result.address[0].features[0].geometry.geometries[0]\n                  .coordinates[1];\n              lng =\n                geo.result.address[0].features[0].geometry.geometries[0]\n                  .coordinates[0];\n              station.lat = lat;\n              station.lng = lng;\n            }\n          }\n        } else {\n          geo = await Geocode.addressToGeo(\n            city.country.title + \",\" + city.title\n          );\n          // geo = await (await fetch(\n          //   ` https://nominatim.openstreetmap.org/search?city=${\n          //     city.title\n          //   }&country=\n          //   ${city.country.title}&format=json`\n          // )).json();\n\n          if (\n            Distance.getDistance(geo[0], geo[1], station.lat, station.lng) <\n            0.25\n          ) {\n            geo = await Geocode.addressToGeo(\n              city.country.title + \",\" + city.title + \",\" + station.address\n            );\n\n            station.lat = geo[0];\n            station.lng = geo[1];\n          }\n        }\n\n        // if (city.country.title === \"Россия\") {\n        //   if (station.address.search(/`${city.title}`/g) === -1)\n        //     geo = await (await fetch(\n        //       `https://cors.io/?http://search.maps.sputnik.ru/search/addr?q=${(city\n        //         .country.title,\n        //       city.title)},${station.address}`\n        //     )).json();\n        //   else\n        //     geo = await (await fetch(\n        //       `https://cors.io/?http://search.maps.sputnik.ru/search/addr?q=${(city\n        //         .country.title,\n        //       station.address)}`\n        //     )).json();\n        //   if (geo.result.address) {\n        //     const lat =\n        //       geo.result.address[0].features[0].geometry.geometries[0]\n        //         .coordinates[1];\n        //     const lng =\n        //       geo.result.address[0].features[0].geometry.geometries[0]\n        //         .coordinates[0];\n        //     if (\n        //       Distance.getDistance(lat, lng, station.lat, station.lng) > 0.5\n        //     ) {\n        //       station.lat = lat;\n        //       station.lng = lng;\n        //     }\n        //   }\n        // } else {\n        //   geo = await Geocode.addressToGeo(\n        //     city.country.title + \",\" + city.title + \", \" + station.address\n        //   );\n        //   console.log(\n        //     Distance.getDistance(geo[0], geo[1], station.lat, station.lng)\n        //   );\n        //   if (\n        //     Distance.getDistance(geo[0], geo[1], station.lat, station.lng) > 0.5\n        //   ) {\n        //     station.lat = geo[0];\n        //     station.lng = geo[1];\n        //   }\n        // }\n\n        return station;\n      })\n    );\n\n    // stations = await Promise.all(\n    //   stations.map(async station => {\n    //     const geo = await Geocode.addressToGeo(\n    //       city.title + \", \" + station.address\n    //     );\n    //     station.lat = geo ? geo[0] : station.lat;\n    //     station.lng = geo ? geo[1] : station.lng;\n    //     return station;\n    //   })\n    // );\n\n    return stations;\n  }\n\n  static async getCities(title) {\n    let cities = {};\n    const wrapAPIKey = Api.wrapAPIKey;\n    const request = `https://wrapapi.com/use/iPagar/blood/cities/latest?title=${title\n      .replace(/^[A-Za-z0-9]+$/, \"\")\n      .trim()}&wrapAPIKey=${wrapAPIKey}`;\n\n    const response = await fetch(request);\n    const json = await response.json();\n\n    cities = json.data ? json.data.cities : [];\n    return cities;\n  }\n}\n\nexport default Database;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Cell } from \"@vkontakte/vkui\";\n\nimport Icon24Chevron from \"@vkontakte/icons/dist/24/chevron\";\n\nconst maxDist = 200;\n\nclass StationsListCell extends React.Component {\n  showLength() {\n    let dist = this.props.data.dist;\n    if (dist < 1) {\n      dist = dist * 1000 + \" м\";\n    } else dist = Math.round(dist).toFixed() + \" км\";\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignContent: \"space-between\",\n          alignItems: \"center\"\n        }}\n      >\n        {this.props.data.dist <= maxDist && (\n          <div style={{ lineHeight: \"24px\" }}>{dist}</div>\n        )}\n        <Icon24Chevron\n          className=\"Cell__chevron\"\n          style={{ display: \"inline-block\" }}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Cell\n        multiline\n        description={this.props.data.address}\n        asideContent={this.showLength()}\n        onClick={() => this.props.city(this.props.data)}\n        size=\"l\"\n      >\n        <b>{this.props.data.title}</b>\n      </Cell>\n    );\n  }\n}\n\nStationsListCell.propTypes = {\n  data: PropTypes.shape({\n    address: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired\n  })\n};\n\nexport default StationsListCell;\n","import React from \"react\";\nimport {\n  Spinner,\n  Panel,\n  List,\n  PanelHeader,\n  HeaderButton,\n  View,\n  Search,\n  Div,\n  platform,\n  IOS,\n  Cell\n} from \"@vkontakte/vkui\";\nimport StationsListCell from \"../components/StationsListCell\";\nimport Loc from \"../resources/Loc\";\nimport Distance from \"../services/Distance\";\nimport DataManager from \"../services/DataManager\";\n\nimport Icon24Settings from \"@vkontakte/icons/dist/24/settings\";\n\nconst osname = platform();\n\nclass StationsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stations: [],\n      search: \"\"\n    };\n  }\n\n  onSearchChange = search => {\n    this.setState({ search });\n  };\n\n  get stations() {\n    const search = this.state.search.toLowerCase().trim();\n    const filteredStations = this.props.stations.filter(\n      station =>\n        station.title.toLowerCase().indexOf(search) > -1 ||\n        station.address.toLowerCase().indexOf(search) > -1\n    );\n\n    return filteredStations;\n  }\n\n  showPanelHeader() {\n    return (\n      <PanelHeader\n        left={\n          <HeaderButton onClick={() => this.props.history.push(\"findCity\")}>\n            <Icon24Settings />\n          </HeaderButton>\n        }\n      >\n        {Loc.FindStationsTitle}\n      </PanelHeader>\n    );\n  }\n\n  showStations() {\n    let listStations = [];\n\n    if (this.stations.length > 0) {\n      let stations = this.stations.map(station => {\n        if (this.props.geo) {\n          const dist = Distance.getDistance(\n            ...this.props.geo,\n            station.lat,\n            station.lng\n          );\n          station.dist = dist;\n        }\n\n        return station;\n      });\n\n      stations.sort((a, b) => {\n        if (a.dist > b.dist) {\n          return 1;\n        }\n        if (a.dist < b.dist) {\n          return -1;\n        }\n\n        return 0;\n      });\n\n      listStations = stations.map((station, i) => {\n        return (\n          <StationsListCell key={i} data={station} city={this.props.city} />\n        );\n      });\n    }\n\n    return (\n      <React.Fragment>\n        <Search\n          value={this.state.search}\n          onChange={this.onSearchChange}\n          maxLength=\"150\"\n        />\n        {listStations.length > 0 && <List>{listStations}</List>}\n        {listStations.length === 0 && (\n          <Cell>\n            <Div align=\"center\">\n              {osname === IOS\n                ? Loc.NothingFindText\n                : Loc.NothingFindTextAndroid}\n            </Div>\n          </Cell>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  componentDidMount() {\n    if (DataManager.getSearch())\n      this.setState({ search: DataManager.getSearch() });\n  }\n\n  componentWillUnmount() {\n    DataManager.setSearch(this.state.search);\n  }\n\n  showSpinner() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        <Spinner size=\"medium\" style={{ marginTop: 20 }} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <View popout={this.props.popout} activePanel=\"stationsList\">\n        <Panel id=\"stationsList\">\n          {this.showPanelHeader()}\n          {this.props.stations.length > 0 && this.showStations()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nexport default StationsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Panel,\n  PanelHeader,\n  HeaderButton,\n  View,\n  Alert,\n  Spinner\n} from \"@vkontakte/vkui\";\nimport VKConnect from \"@vkontakte/vkui-connect\";\nimport { Map, Placemark, Clusterer } from \"react-yandex-maps\";\nimport DataManager from \"../services/DataManager\";\nimport Loc from \"../resources/Loc\";\nimport Geocode from \"../services/Geocode\";\n\nimport Icon24Locate from \"@vkontakte/icons/dist/24/locate\";\n\nclass StationsMap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      styleMap: {\n        display: \"flex\",\n        flexGrow: \"1\",\n        width: \"100%\"\n      },\n      map: null,\n      geo: \"\",\n      zoom: 12,\n      isLoading: true,\n      isLoadingMap: true,\n      userGeo: \"\",\n      isPanning: false,\n      stations: \"\"\n    };\n  }\n\n  geoSubscribe = async e => {\n    switch (e.detail.type) {\n      case \"VKWebAppGeodataResult\":\n        if (e.detail.data.available) {\n          DataManager.setGeo(e.detail.data.lat, e.detail.data.long);\n          const city = await Geocode.geoToCity(DataManager.getGeo());\n          DataManager.setUserCity(city);\n          this.setState({ userGeo: DataManager.getGeo(), isPanning: true });\n          this.state.map\n            .panTo(this.state.userGeo)\n            .then(() => this.setState({ isPanning: false }));\n        } else {\n          DataManager.setGeo(null, null);\n          this.setState({ userGeo: DataManager.getGeo() });\n          DataManager.setUserCity(null);\n          this.setState({\n            popout: (\n              <Alert\n                actions={[\n                  {\n                    title: \"Ок\",\n                    autoclose: true,\n                    style: \"primary\"\n                  }\n                ]}\n                onClose={() => this.setState({ popout: null })}\n              >\n                <h2>Геопозиция отключена</h2>\n                <p>Включите геопозицию в настройках Вашего телефона</p>\n              </Alert>\n            )\n          });\n        }\n        break;\n      case \"VKWebAppGeodataFailed\":\n        this.setState({\n          popout: (\n            <Alert\n              actions={[\n                {\n                  title: \"Ок\",\n                  autoclose: true,\n                  style: \"primary\"\n                }\n              ]}\n              onClose={() => this.setState({ popout: null })}\n            >\n              <p>Не удалось получить геопозицию</p>\n            </Alert>\n          )\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  onClickHeaderButton = () => {\n    VKConnect.subscribe(this.geoSubscribe);\n    VKConnect.send(\"VKWebAppGetGeodata\", {});\n  };\n\n  showPanelHeader() {\n    return (\n      <PanelHeader\n        left={\n          <HeaderButton onClick={this.onClickHeaderButton}>\n            <Icon24Locate />\n          </HeaderButton>\n        }\n      >\n        {Loc.FindStationsTitle}\n      </PanelHeader>\n    );\n  }\n\n  setMapRef = map => {\n    if (this._isMounted) this.setState({ map });\n  };\n\n  setPlacemarks() {\n    const stations = this.props.stations.map((station, i) => (\n      <Placemark\n        key={i}\n        onClick={() => {\n          this.props.city(station);\n        }}\n        geometry={[station.lat, station.lng]}\n        options={{\n          iconLayout: \"default#image\",\n          iconImageHref:\n            \"https://raw.githubusercontent.com/iPagar/donate-blood/master/src/img/heart.png\",\n          iconImageSize: [36, 36],\n          iconImageOffset: [-18, -36]\n        }}\n      />\n    ));\n\n    this.setState({ Stations: stations });\n  }\n\n  mapOnLoad = () => {\n    this.setState({ isLoadingMap: false });\n  };\n\n  showMap() {\n    const { geo, zoom, Stations, isLoading, isLoadingMap } = this.state;\n\n    const mapState = {\n      center: geo,\n      zoom: zoom\n    };\n    const mapOptions = {\n      yandexMapDisablePoiInteractivity: true,\n      suppressMapOpenBlock: true\n    };\n\n    return (\n      <div style={this.state.styleMap}>\n        {isLoadingMap && this.showSpinner()}\n        {!isLoading && (\n          <Map\n            style={this.state.styleMap}\n            defaultState={mapState}\n            defaultOptions={mapOptions}\n            instanceRef={this.setMapRef}\n            onLoad={this.mapOnLoad}\n          >\n            <Clusterer\n              options={{\n                preset: \"islands#redClusterIcons\",\n                clusterIconColor: \"#f60808\",\n                groupByCoordinates: false,\n                useMapMargin: true,\n                gridSize: 128,\n                margin: 10,\n                hasBalloon: false,\n                hasHint: false,\n                zoomMargin: 36\n              }}\n            >\n              {Stations.map(station => station)}\n            </Clusterer>\n            <Placemark\n              geometry={this.state.userGeo}\n              options={{\n                preset: \"islands#geolocationIcon\",\n                iconColor: \"#f60808\"\n              }}\n            />\n          </Map>\n        )}\n      </div>\n    );\n  }\n\n  async setGeo() {\n    this.setState({ isLoading: true });\n    const actualMapState = DataManager.getMapState();\n\n    if (actualMapState) {\n      //не меняем карту\n      this.setState({ geo: actualMapState.center });\n      this.setState({ zoom: actualMapState.zoom });\n    } else if (DataManager.getCity().title === DataManager.getUserCity()) {\n      //показываем геопозицию пользователя\n      this.setState({ geo: DataManager.getGeo(), zoom: 14 });\n    } else {\n      //показываем на центр города\n      let geo = await Geocode.addressToGeo(DataManager.getCity().title);\n\n      this.setState({\n        geo,\n        zoom: 12\n      });\n    }\n    this.setState({ userGeo: DataManager.getGeo(), isLoading: false });\n  }\n\n  setMap() {\n    if (this.state.map) {\n      let mapState = {\n        center: this.state.map.getCenter(),\n        zoom: this.state.map.getZoom()\n      };\n\n      DataManager.setMapState(mapState);\n    }\n  }\n\n  showSpinner() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          margin: \"auto\",\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0\n        }}\n      >\n        <Spinner size=\"medium\" />\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    VKConnect.unsubscribe(this.geoSubscribe);\n    this.setMap();\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setGeo();\n    this.setPlacemarks();\n  }\n\n  render() {\n    return (\n      <View popout={this.state.popout} activePanel=\"stationsMap\">\n        <Panel id=\"stationsMap\" centered>\n          {this.showPanelHeader()}\n          {this.showMap()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nStationsMap.propTypes = {\n  stations: PropTypes.array.isRequired\n};\n\nexport default StationsMap;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Cell, Div, Group } from \"@vkontakte/vkui\";\n\nimport Icon16Dropdown from \"@vkontakte/icons/dist/16/dropdown\";\n\nclass Topic extends React.Component {\n  state = {\n    visibleText: false,\n    icon: (\n      <Icon16Dropdown\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }}\n      />\n    ),\n    text: null\n  };\n\n  handleTitleClick = e => {\n    // e.currentTarget.children[0].className = `Tappable Tappable--ios Cell__in Tappable--inactive`;\n    // console.log(e.currentTarget.children[0].className);\n    let icon = (\n      <Icon16Dropdown\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          transform: \"rotate(180deg)\"\n        }}\n      />\n    );\n    let text = this.props.data.text;\n\n    if (this.state.visibleText) {\n      icon = (\n        <Icon16Dropdown\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          }}\n        />\n      );\n\n      text = null;\n    }\n\n    this.setState({ visibleText: !this.state.visibleText, text, icon });\n  };\n\n  showText() {\n    const text = this.state.text.map((textData, i) => (\n      <Div key={i}>{this.state.text[i]}</Div>\n    ));\n\n    return text;\n  }\n\n  render() {\n    const { title } = this.props.data;\n    return (\n      <div>\n        <Cell multiline size=\"l\" onClick={this.handleTitleClick}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            }}\n          >\n            <b>{title}</b> {this.state.icon}\n          </div>\n        </Cell>\n        {this.state.visibleText && this.showText()}\n      </div>\n    );\n  }\n}\n\nTopic.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    text: PropTypes.array.isRequired\n  })\n};\n\nexport default Topic;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Topic from \"../components/Topic\";\nimport Topics from \"../resources/Topics\";\nimport { Panel, PanelHeader, Group, List, View } from \"@vkontakte/vkui\";\n\nimport Loc from \"../resources/Loc\";\n\nclass About extends React.Component {\n  showTopics() {\n    const topics = Topics.map((topic, i) => {\n      return <Topic key={i} data={topic} />;\n    });\n    return (\n      <Group>\n        <List>{topics}</List>\n      </Group>\n    );\n  }\n\n  showPanelHeader() {\n    return <PanelHeader>{Loc.SettingsAboutTitle}</PanelHeader>;\n  }\n\n  render() {\n    return (\n      <View activePanel=\"aboutDonationPanel\">\n        <Panel id=\"aboutDonationPanel\">\n          {this.showPanelHeader()}\n          {this.showTopics()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nAbout.propTypes = {\n  welcome: PropTypes.bool\n};\n\nexport default About;\n","import React from \"react\";\nimport VKConnect, { response as res } from \"@vkontakte/vkui-connect\";\nimport DataManager from \"../services/DataManager\";\nimport Database from \"../services/Database\";\nimport Geocode from \"../services/Geocode\";\nimport Loc from \"../resources/Loc\";\nimport {\n  Epic,\n  Tabbar,\n  TabbarItem,\n  ScreenSpinner,\n  Alert\n} from \"@vkontakte/vkui\";\nimport Icon28Place from \"@vkontakte/icons/dist/28/place\";\nimport Icon28Search from \"@vkontakte/icons/dist/28/search\";\nimport Icon28HelpOutline from \"@vkontakte/icons/dist/28/help_outline\";\n\nimport StationsList from \"./StationsList\";\nimport StationsMap from \"./StationsMap\";\nimport AboutDonation from \"./AboutDonation\";\n\n// res.VKWebAppGetUserInfo.data = {\n//   type: \"VKWebAppGeodataResult\",\n//   data: {\n//     available: 1,\n//     lat: \"55.86647\",\n//     long: \"38.443\"\n//   }\n// };\n\nclass FindStations extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeView: \"findStations\",\n      activeStory: \"stationsList\",\n      isLoading: false,\n      styleTabButton: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      stations: [],\n      popout: null\n    };\n  }\n\n  onStoryChange = e => {\n    this.setState({ activeStory: e.currentTarget.dataset.story });\n    this.props.history.replace(\"?\" + e.currentTarget.dataset.story);\n  };\n\n  showTabbar = () => {\n    return (\n      <Tabbar>\n        <TabbarItem\n          onClick={this.onStoryChange}\n          selected={this.state.activeStory === \"stationsList\"}\n          data-story=\"stationsList\"\n        >\n          <div style={this.state.styleTabButton}>\n            <Icon28Search />\n          </div>\n        </TabbarItem>\n        <TabbarItem\n          onClick={this.onStoryChange}\n          selected={this.state.activeStory === \"stationsMap\"}\n          data-story=\"stationsMap\"\n        >\n          <div style={this.state.styleTabButton}>\n            <Icon28Place />\n          </div>\n        </TabbarItem>\n        <TabbarItem\n          onClick={this.onStoryChange}\n          selected={this.state.activeStory === \"aboutDonation\"}\n          data-story=\"aboutDonation\"\n        >\n          <div style={this.state.styleTabButton}>\n            <Icon28HelpOutline />\n          </div>\n        </TabbarItem>\n      </Tabbar>\n    );\n  };\n\n  async setCity() {\n    this.setState({ isLoading: true, popout: <ScreenSpinner /> });\n\n    const city = await Geocode.geoToCity(DataManager.getGeo());\n    DataManager.setUserCity(city);\n    const cities = await Database.getCities(DataManager.getUserCity());\n    if (cities.length > 0) {\n      const stations = await Database.getStations(cities[0]);\n\n      if (stations.length > 0) {\n        DataManager.setCity(cities[0]);\n        DataManager.setStations(stations);\n        this.setState({ stations });\n        this.setState({ isLoading: false, popout: null });\n      } else {\n        const center = await Geocode.getProvincyCenter(DataManager.getGeo());\n        const cities = await Database.getCities(center);\n        const stations = await Database.getStations(cities[0]);\n\n        if (cities.length > 0 && stations.length > 0) {\n          DataManager.setCity(cities[0]);\n          DataManager.setStations(stations);\n          this.setState({ stations });\n          this.setState({ isLoading: false, popout: null });\n        } else {\n          this.openEmptySheet(Loc.EmptySheetTitle);\n        }\n      }\n    } else this.openEmptySheet(Loc.EmptySheetTitle);\n  }\n\n  setStations = () => {\n    this.setState({\n      stations: DataManager.getStations()\n    });\n  };\n\n  geoSubscribe = e => {\n    switch (e.detail.type) {\n      case \"VKWebAppGeodataResult\":\n        if (e.detail.data.available) {\n          DataManager.setGeo(e.detail.data.lat, e.detail.data.long);\n\n          this.setCity();\n        } else this.openEmptySheet(Loc.GetGeoError);\n        break;\n      case \"VKWebAppGeodataFailed\":\n        this.openEmptySheet(Loc.GetGeoError);\n        break;\n      default:\n        break;\n    }\n  };\n\n  getCity() {\n    if (DataManager.getCity() === null) {\n      VKConnect.subscribe(this.geoSubscribe);\n      VKConnect.send(\"VKWebAppGetGeodata\", {});\n    } else {\n      this.setStations();\n    }\n  }\n\n  openEmptySheet(text) {\n    const { history } = this.props;\n\n    if (this._isMounted)\n      this.setState({\n        popout: (\n          <Alert\n            actions={[\n              {\n                title: Loc.EmptySheetActionTitle,\n                autoclose: true,\n                style: \"default\"\n              }\n            ]}\n            onClose={() => {\n              this.setState({ popout: null });\n              history.replace(\"findCityNecessarily\");\n            }}\n          >\n            <h2>{text}</h2>\n          </Alert>\n        )\n      });\n  }\n\n  city = city => {\n    DataManager.setStation(city);\n    this.props.history.push(\"station\");\n  };\n\n  componentWillUnmount() {\n    VKConnect.unsubscribe(this.geoSubscribe);\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    if (this.props.location.search)\n      this.setState({ activeStory: this.props.location.search.slice(1) });\n\n    this.getCity();\n  }\n\n  render() {\n    return (\n      <Epic activeStory={this.state.activeStory} tabbar={this.showTabbar()}>\n        <StationsList\n          popout={this.state.popout}\n          id=\"stationsList\"\n          history={this.props.history}\n          stations={this.state.stations}\n          city={this.city}\n          geo={DataManager.getGeo()}\n        />\n        <StationsMap\n          popout={this.state.popout}\n          id=\"stationsMap\"\n          stations={this.state.stations}\n          city={this.city}\n        />\n        <AboutDonation popout={this.state.popout} id=\"aboutDonation\" />\n      </Epic>\n    );\n  }\n}\n\nFindStations.propTypes = {};\n\nexport default FindStations;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Cell } from \"@vkontakte/vkui\";\n\nclass FindCityCell extends React.Component {\n  onClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  render() {\n    let description;\n    if (this.props.data.region) description = this.props.data.region.title;\n    return (\n      <Cell description={description} onClick={this.onClick}>\n        {!description && (\n          <div style={{ lineHeight: \"39px\" }}>{this.props.data.title}</div>\n        )}\n        {description && this.props.data.title}\n      </Cell>\n    );\n  }\n}\n\nFindCityCell.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired\n  })\n};\n\nexport default FindCityCell;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Database from \"../services/Database\";\nimport FindCityCell from \"../components/FindCityCell\";\nimport DataManager from \"../services/DataManager\";\nimport Loc from \"../resources/Loc\";\nimport {\n  Panel,\n  PanelHeader,\n  HeaderButton,\n  platform,\n  IOS,\n  Search,\n  List,\n  Spinner,\n  Div,\n  View,\n  Cell,\n  Alert,\n  ScreenSpinner\n} from \"@vkontakte/vkui\";\n\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\nconst osname = platform();\n\nclass FindCity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      isLoading: false,\n      cities: [],\n      popout: null\n    };\n  }\n\n  onChange = async search => {\n    if (this._isMounted) {\n      this.setState({ search });\n      await this.updateCities();\n    }\n  };\n\n  async updateCities() {\n    await this.setState({ isLoading: true });\n    const { search } = this.state;\n    const cities = await Database.getCities(search);\n\n    if (search === this.state.search)\n      await this.setState({ cities, isLoading: false });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.updateCities();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  showSpinner() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        <Spinner size=\"medium\" style={{ marginTop: 20 }} />\n      </div>\n    );\n  }\n\n  onCellClick = async data => {\n    this.setState({ popout: <ScreenSpinner /> });\n    const stations = await Database.getStations(data);\n\n    if (stations.length > 0) {\n      if (this._isMounted) {\n        DataManager.setCity(data);\n        DataManager.setStations(stations);\n        this.setState({ popout: null });\n      }\n      if (this.props.necessarily) this.props.history.push(\"findStations\");\n      else this.props.history.goBack();\n    } else this.openEmptySheet(Loc.EmptySheetTitle);\n  };\n\n  openEmptySheet(text) {\n    if (this._isMounted)\n      this.setState({\n        popout: (\n          <Alert\n            actions={[\n              {\n                title: Loc.EmptySheetActionTitle,\n                autoclose: true,\n                style: \"default\"\n              }\n            ]}\n            onClose={() => {\n              this.setState({ popout: null });\n            }}\n          >\n            <h2>{text}</h2>\n          </Alert>\n        )\n      });\n  }\n\n  showCities() {\n    const listCities = this.state.cities.map(city => {\n      return (\n        <FindCityCell key={city.id} data={city} onClick={this.onCellClick} />\n      );\n    });\n\n    return (\n      <React.Fragment>\n        {listCities.length > 0 && <List>{listCities}</List>}\n        {listCities.length === 0 && (\n          <Cell>\n            <Div align=\"center\">\n              {osname === IOS\n                ? Loc.NothingFindText\n                : Loc.NothingFindTextAndroid}\n            </Div>\n          </Cell>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showSearch() {\n    return (\n      <Search\n        value={this.state.search}\n        onChange={this.onChange}\n        maxLength=\"30\"\n      />\n    );\n  }\n\n  showPanelHeader() {\n    let headerButton = (\n      <HeaderButton onClick={this.props.history.goBack}>\n        {osname === IOS ? \"Отмена\" : <Icon24Back />}\n      </HeaderButton>\n    );\n\n    if (this.props.necessarily) headerButton = \" \";\n\n    return (\n      <PanelHeader noShadow left={headerButton}>\n        {Loc.FindCityTitle}\n      </PanelHeader>\n    );\n  }\n\n  render() {\n    return (\n      <View activePanel=\"findCityPanel\" popout={this.state.popout}>\n        <Panel id=\"findCityPanel\">\n          {this.showPanelHeader()}\n          {this.showSearch()}\n          {!this.state.isLoading && this.showCities()}\n          {this.state.isLoading && this.showSpinner()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nFindCity.propTypes = {\n  history: PropTypes.object.isRequired\n};\n\nexport default FindCity;\n","import React from \"react\";\nimport { Map, Placemark } from \"react-yandex-maps\";\nimport {\n  Panel,\n  HeaderButton,\n  PanelHeader,\n  View,\n  Group,\n  Cell,\n  List,\n  Link,\n  Spinner,\n  platform,\n  IOS\n} from \"@vkontakte/vkui\";\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\nimport Loc from \"../resources/Loc\";\nimport DataManager from \"../services/DataManager\";\n\nimport { findNumbers } from \"libphonenumber-js\";\n\nimport Icon24Place from \"@vkontakte/icons/dist/24/place\";\nimport Icon24Globe from \"@vkontakte/icons/dist/24/globe\";\nimport Icon24Phone from \"@vkontakte/icons/dist/24/phone\";\nimport Icon24Recent from \"@vkontakte/icons/dist/24/recent\";\n\nconst osname = platform();\n\nclass Station extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      styleMap: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignContent: \"space-between\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"300px\"\n      },\n      isLoadingMap: true,\n      station: DataManager.getStation()\n    };\n  }\n\n  showPanelHeader() {\n    const { history } = this.props;\n\n    return (\n      <PanelHeader\n        left={\n          <HeaderButton onClick={history.goBack}>\n            {osname === IOS ? \"Отмена\" : <Icon24Back />}\n          </HeaderButton>\n        }\n      >\n        {Loc.StationTitle}\n      </PanelHeader>\n    );\n  }\n\n  mapOnLoad = () => {\n    this.setState({ isLoadingMap: false });\n  };\n\n  showMap() {\n    const zoom = 16;\n\n    const mapState = {\n      center: [this.state.station.lat, this.state.station.lng],\n      zoom: zoom\n    };\n\n    const mapOptions = {\n      yandexMapDisablePoiInteractivity: true,\n      suppressMapOpenBlock: true\n    };\n\n    return (\n      <div>\n        {this.state.isLoadingMap && this.showSpinner()}\n        <Map\n          defaultOptions={mapOptions}\n          style={this.state.styleMap}\n          defaultState={mapState}\n          onLoad={this.mapOnLoad}\n        >\n          <Placemark\n            geometry={[this.state.station.lat, this.state.station.lng]}\n            options={{\n              iconLayout: \"default#image\",\n              iconImageHref:\n                \"https://raw.githubusercontent.com/iPagar/donate-blood/master/src/img/heart.png\",\n              iconImageSize: [36, 36],\n              iconImageOffset: [-18, -36]\n            }}\n          />\n          <Placemark\n            geometry={DataManager.getGeo()}\n            options={{\n              preset: \"islands#geolocationIcon\",\n              iconColor: \"#f60808\"\n            }}\n          />\n        </Map>\n      </div>\n    );\n  }\n\n  showSite() {\n    return (\n      <React.Fragment>\n        {this.state.station.site.length > 0 && (\n          <Group title=\"Сайт\">\n            <List>\n              <Cell multiline before={<Icon24Globe />}>\n                <Link\n                  href={\n                    this.state.station.site.includes(\"http\")\n                      ? `${this.state.station.site}`\n                      : `//${this.state.station.site}`\n                  }\n                  target=\"_blank\"\n                >\n                  {this.state.station.site}\n                </Link>\n              </Cell>\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showEmail() {\n    return (\n      <React.Fragment>\n        {this.state.station.email.length > 0 && (\n          <Group title=\"E-mail\">\n            <List>\n              <Cell multiline before={<Icon24Globe />}>\n                <Link href={this.state.station.site}>\n                  {this.state.station.site}\n                </Link>\n              </Cell>\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showWorkTime() {\n    return (\n      <React.Fragment>\n        {this.state.station.worktime.length > 0 && (\n          <Group title=\"Время работы\">\n            <List>\n              <Cell multiline before={<Icon24Recent />}>\n                {this.state.station.worktime}\n              </Cell>\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showTel() {\n    let tels = [];\n    if (this.state.station.phones.length > 0)\n      findNumbers(this.state.station.phones, \"RU\", {\n        v2: true\n      }).map(tel => tels.push(tel.number.formatNational()));\n\n    return (\n      <React.Fragment>\n        {tels.length > 0 && (\n          <Group title=\"Контакты\">\n            <List>\n              {tels.map((tel, i) => (\n                <Cell key={i} before={<Icon24Phone />}>\n                  <Link href={`tel:${tel}`}>{tel}</Link>\n                </Cell>\n              ))}\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showAddress() {\n    return (\n      <Group title={this.state.station.title}>\n        <List>\n          <Cell multiline before={<Icon24Place />}>\n            <Link\n              href={`//maps.yandex.ru/?text=${this.state.station.city.title}, ${\n                this.state.station.address\n              }`}\n            >\n              {this.state.station.address}\n            </Link>\n          </Cell>\n        </List>\n      </Group>\n    );\n  }\n\n  showInfo() {\n    return (\n      <React.Fragment>\n        {this.showAddress()}\n        {this.showWorkTime()}\n        {this.showTel()}\n        {this.showSite()}\n      </React.Fragment>\n    );\n  }\n\n  showSpinner() {\n    return (\n      <div style={this.state.styleMap}>\n        <Spinner size=\"medium\" />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <View activePanel=\"station\" popout={this.state.popout}>\n        <Panel id=\"station\">\n          {this.showPanelHeader()}\n          {this.showMap()}\n          {this.showInfo()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nexport default Station;\n","import React from \"react\";\nimport VKConnect from \"@vkontakte/vkui-connect\";\nimport { Root, View } from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./resources/ui.css\";\nimport { Route, withRouter } from \"react-router-dom\";\n\nimport FindStations from \"./panels/FindStations\";\nimport FindCity from \"./panels/FindCity\";\nimport Station from \"./panels/Station\";\n\nclass App extends React.Component {\n  state = { isLoading: false };\n\n  getTheme() {\n    VKConnect.subscribe(e => {\n      switch (e.detail.type) {\n        case \"VKWebAppUpdateConfig\":\n          let schemeAttribute = document.createAttribute(\"scheme\");\n          schemeAttribute.value = e.detail.data.scheme\n            ? e.detail.data.scheme\n            : \"client_light\";\n          document.body.attributes.setNamedItem(schemeAttribute);\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  async setInitialView() {\n    await this.setState({ isLoading: true });\n\n    this.props.history.replace(\"findStations\");\n\n    await this.setState({ isLoading: false });\n  }\n\n  componentDidMount() {\n    this.setInitialView();\n    this.getTheme();\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    const activeView = this.props.location.pathname.slice(1);\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        {!isLoading && (\n          <Root activeView={activeView}>\n            <Route id=\"findStations\" component={FindStations} />\n            <Route id=\"station\" component={Station} />\n            <Route id=\"findCity\" component={FindCity} />\n            <Route\n              id=\"findCityNecessarily\"\n              render={() => (\n                <View activePanel=\"findCityPanel\">\n                  <FindCity\n                    id=\"findCityPanel\"\n                    history={this.props.history}\n                    necessarily\n                  />\n                </View>\n              )}\n            />\n          </Root>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import \"core-js/es6/map\";\nimport \"core-js/es6/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport connect from \"@vkontakte/vkui-connect\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { YMaps } from \"react-yandex-maps\";\n\n// Init VK App\nconnect.send(\"VKWebAppInit\", {});\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<YMaps>\n\t\t\t<App />\n\t\t</YMaps>\n\t</HashRouter>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}