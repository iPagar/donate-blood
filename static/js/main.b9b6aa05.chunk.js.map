{"version":3,"sources":["services/DataManager.js","services/Database.js","services/Geocode.js","components/StationsListCell.js","services/Distance.js","panels/StationsList.js","panels/StationsMap.js","components/Topic.js","panels/AboutDonation.js","panels/FindStations.js","components/FindCityCell.js","panels/FindCity.js","panels/Station.js","App.js","index.js"],"names":["DataManager","mapState","sessionStorage","setItem","JSON","stringify","parse","getItem","search","city","this","setSearch","setMapState","userCity","lat","long","geo","Number","station","stations","Database","cityId","id","wrapAPIKey","Api","request","fetch","response","json","data","filter","title","toLowerCase","indexOf","cities","replace","trim","_callee","apiKey","cityTitle","regenerator_default","a","wrap","_context","prev","next","ApiYandex","concat","sent","GeoObjectCollection","featureMember","GeoObject","name","abrupt","stop","_callee2","address","geoData","_context2","Point","pos","substr","split","_callee3","oblast","request1","response1","json1","cityTitle1","_context3","metaDataProperty","GeocoderMetaData","AddressDetails","Country","AdministrativeArea","AdministrativeAreaName","state","Geocode","geoToCity","addressToGeo","getProvincyCenter","StationsListCell","dist","props","Math","round","toFixed","react_default","createElement","style","display","justifyContent","alignContent","alignItems","lineHeight","chevron_default","className","_this","vkui","multiline","description","asideContent","showLength","onClick","size","React","Component","deg2rad","degrees","PI","Distance","getDistance","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","c","atan2","sqrt","osname","platform","StationsList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","setState","_this2","left","history","push","settings_default","Loc","FindStationsTitle","_this3","listStations","length","map","apply","toConsumableArray","lng","sort","b","i","components_StationsListCell","key","Fragment","value","onChange","maxLength","align","IOS","NothingFindText","NothingFindTextAndroid","getSearch","flexDirection","marginTop","popout","activePanel","showPanelHeader","showStations","StationsMap","geoSubscribe","_ref","asyncToGenerator","mark","e","t0","detail","type","available","setGeo","getGeo","setUserCity","userGeo","isPanning","panTo","then","actions","autoclose","onClose","_x","arguments","onClickHeaderButton","VKConnect","subscribe","send","setMapRef","_isMounted","mapOnLoad","isLoadingMap","styleMap","flexGrow","width","zoom","isLoading","locate_default","react_yandex_maps_umd_production_min","geometry","options","iconLayout","iconImageHref","iconImageSize","iconImageOffset","Stations","_this$state","center","showSpinner","defaultState","defaultOptions","yandexMapDisablePoiInteractivity","suppressMapOpenBlock","instanceRef","onLoad","preset","clusterIconColor","groupByCoordinates","useMapMargin","gridSize","margin","hasBalloon","hasHint","zoomMargin","iconColor","actualMapState","getMapState","getCity","getUserCity","getCenter","getZoom","position","top","bottom","right","unsubscribe","setMap","setPlacemarks","centered","showMap","Topic","visibleText","icon","dropdown_default","text","handleTitleClick","transform","textData","showText","About","topics","Topics","topic","components_Topic","SettingsAboutTitle","showTopics","FindStations","onStoryChange","activeStory","currentTarget","dataset","story","showTabbar","selected","data-story","styleTabButton","search_default","place_default","help_outline_default","setStations","getStations","setCity","openEmptySheet","GetGeoError","setStation","activeView","getCities","EmptySheetTitle","EmptySheetActionTitle","location","slice","tabbar","panels_StationsList","panels_StationsMap","AboutDonation","FindCityCell","region","FindCity","updateCities","onCellClick","_ref2","necessarily","goBack","_x2","listCities","components_FindCityCell","headerButton","back_default","noShadow","FindCityTitle","showSearch","showCities","Station","height","getStation","StationTitle","site","before","globe_default","href","includes","target","email","worktime","recent_default","tels","phones","findNumbers","v2","tel","number","formatNational","phone_default","level","whiteSpace","_24_place_default","showAddress","showWorkTime","showTel","showSite","showInfo","App","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","setInitialView","getTheme","pathname","Route","component","render","panels_FindCity","withRouter","connect","ReactDOM","HashRouter","src_App","getElementById"],"mappings":"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","file":"static/js/main.b9b6aa05.chunk.js","sourcesContent":["class DataManager {\n  static setMapState(mapState) {\n    sessionStorage.setItem(\"mapState\", JSON.stringify(mapState));\n  }\n\n  static getMapState() {\n    const mapState = JSON.parse(sessionStorage.getItem(\"mapState\"));\n\n    return mapState;\n  }\n\n  static setSearch(search) {\n    sessionStorage.setItem(\"search\", JSON.stringify(search));\n  }\n\n  static getSearch() {\n    const search = JSON.parse(sessionStorage.getItem(\"search\"));\n\n    return search;\n  }\n\n  static async setCity(city) {\n    sessionStorage.setItem(\"city\", JSON.stringify(city));\n\n    this.setSearch(\"\");\n    this.setMapState(null);\n  }\n\n  static getCity() {\n    const city = JSON.parse(sessionStorage.getItem(\"city\"));\n\n    return city;\n  }\n\n  static setUserCity(userCity) {\n    sessionStorage.setItem(\"userCity\", JSON.stringify(userCity));\n  }\n\n  static getUserCity() {\n    const userCity = JSON.parse(sessionStorage.getItem(\"userCity\"));\n\n    return userCity;\n  }\n\n  static setGeo(lat, long) {\n    const geo = JSON.stringify([Number(lat), Number(long)]);\n\n    sessionStorage.setItem(\"geo\", geo);\n  }\n\n  static getGeo() {\n    const geo = JSON.parse(sessionStorage.getItem(\"geo\"));\n\n    return geo;\n  }\n\n  static setStation(station) {\n    sessionStorage.setItem(\"station\", JSON.stringify(station));\n  }\n\n  static getStation() {\n    const station = JSON.parse(sessionStorage.getItem(\"station\"));\n\n    return station;\n  }\n\n  static setStations(stations) {\n    sessionStorage.setItem(\"stations\", JSON.stringify(stations));\n  }\n\n  static getStations() {\n    const stations = JSON.parse(sessionStorage.getItem(\"stations\"));\n\n    return stations;\n  }\n}\n\nexport default DataManager;\n","import Api from \"../configs/Api.json\";\n\nclass Database {\n    static async getStations(city) {\n        let stations = {};\n        const cityId = city.id;\n        const wrapAPIKey = Api.wrapAPIKey;\n        const request = `https://wrapapi.com/use/iPagar/blood/stations/latest?city_id=${cityId}&wrapAPIKey=${wrapAPIKey}`;\n\n        const response = await fetch(request);\n        const json = await response.json();\n\n        stations = json.data.stations;\n\n        stations = stations.filter(\n            station =>\n                !(\n                    station.title.toLowerCase().indexOf(\"закрыта\") !== -1 ||\n                    station.title.toLowerCase().indexOf(\"закрыто\") !== -1\n                )\n        );\n\n        // stations = await Promise.all(\n        //     stations.map(async station => {\n        //         if (station.address.search(/;/g) !== -1)\n        //             station.address = station.address\n        //                 .split(\"\")\n        //                 .reverse()\n        //                 .join(\"\")\n        //                 .split(\";\")[0]\n        //                 .split(\"\")\n        //                 .reverse()\n        //                 .join(\"\");\n\n        //         let geo;\n        //         if (city.country.title === \"Россия\") {\n        //             geo = await (await fetch(\n        //                 `https://cors.io/?http://search.maps.sputnik.ru/search/addr?q=${(city\n        //                     .country.title,\n        //                 city.title)}`\n        //             )).json();\n\n        //             if (geo.result.address) {\n        //                 let lat =\n        //                     geo.result.address[0].features[0].geometry\n        //                         .geometries[0].coordinates[1];\n        //                 let lng =\n        //                     geo.result.address[0].features[0].geometry\n        //                         .geometries[0].coordinates[0];\n\n        //                 if (\n        //                     Distance.getDistance(\n        //                         lat,\n        //                         lng,\n        //                         station.lat,\n        //                         station.lng\n        //                     ) < 1\n        //                 ) {\n        //                     geo = await (await fetch(\n        //                         `https://cors.io/?http://search.maps.sputnik.ru/search/addr?q=${\n        //                             city.country.title\n        //                         },${city.title},${station.address}`\n        //                     )).json();\n        //                     lat =\n        //                         geo.result.address[0].features[0].geometry\n        //                             .geometries[0].coordinates[1];\n        //                     lng =\n        //                         geo.result.address[0].features[0].geometry\n        //                             .geometries[0].coordinates[0];\n        //                     station.lat = lat;\n        //                     station.lng = lng;\n        //                 }\n        //             }\n        //         } else {\n        //             geo = await Geocode.addressToGeo(\n        //                 city.country.title + \",\" + city.title\n        //             );\n\n        //             if (\n        //                 Distance.getDistance(\n        //                     geo[0],\n        //                     geo[1],\n        //                     station.lat,\n        //                     station.lng\n        //                 ) < 0.25\n        //             ) {\n        //                 geo = await Geocode.addressToGeo(\n        //                     city.country.title +\n        //                         \",\" +\n        //                         city.title +\n        //                         \",\" +\n        //                         station.address\n        //                 );\n\n        //                 station.lat = geo[0];\n        //                 station.lng = geo[1];\n        //             }\n        //         }\n\n        //         return station;\n        //     })\n        // );\n\n        return stations;\n    }\n\n    static async getCities(title) {\n        let cities = {};\n        const wrapAPIKey = Api.wrapAPIKey;\n        const request = `https://wrapapi.com/use/iPagar/blood/cities/latest?title=${title\n            .replace(/^[A-Za-z0-9]+$/, \"\")\n            .trim()}&wrapAPIKey=${wrapAPIKey}`;\n\n        const response = await fetch(request);\n        const json = await response.json();\n\n        cities = json.data ? json.data.cities : [];\n        return cities;\n    }\n}\n\nexport default Database;\n","import Api from \"../configs/Api.json\";\n\nasync function geoToCity(geo) {\n  const apiKey = Api.ApiYandex;\n  const kind = \"locality\";\n  const format = \"json\";\n  const sco = \"latlong\";\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&sco=${sco}&results=1&format=${format}&kind=${kind}&geocode=${geo}`;\n\n  const response = await fetch(request);\n  const json = await response.json();\n\n  const cityTitle =\n    json.response.GeoObjectCollection.featureMember[0].GeoObject.name;\n  return cityTitle;\n}\n\nasync function addressToGeo(address) {\n  const apiKey = Api.ApiYandex;\n  const format = \"json\";\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&results=1&format=${format}&geocode=${address}`;\n\n  const response = await fetch(request);\n  const json = await response.json();\n\n  const geoData = json.response.GeoObjectCollection.featureMember[0]\n    ? JSON.stringify(\n        json.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos\n      )\n        .substr(1, 17)\n        .split(\" \")\n    : null;\n\n  const geo = geoData ? [geoData[1], geoData[0]] : null;\n\n  return geo;\n}\n\nasync function getProvincyCenter(geo) {\n  const apiKey = Api.ApiYandex;\n  const kind = \"locality\";\n  const format = \"json\";\n  const sco = \"latlong\";\n  const request = `https://geocode-maps.yandex.ru/1.x/?apikey=${apiKey}&sco=${sco}&results=1&format=${format}&kind=${kind}&geocode=${geo}`;\n\n  const response = await fetch(request);\n  const json = await response.json();\n\n  const oblast =\n    json.response.GeoObjectCollection.featureMember[0].GeoObject\n      .metaDataProperty.GeocoderMetaData.AddressDetails.Country\n      .AdministrativeArea.AdministrativeAreaName;\n\n  const request1 = `https://nominatim.openstreetmap.org/search?q=${oblast}&polygon=1&addressdetails=1&format=jsonv2`;\n\n  const response1 = await fetch(request1);\n  const json1 = await response1.json();\n  const cityTitle1 = json1[1].address.state;\n\n  return cityTitle1;\n}\n\nexport default { geoToCity, addressToGeo, getProvincyCenter };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Cell } from \"@vkontakte/vkui\";\n\nimport Icon24Chevron from \"@vkontakte/icons/dist/24/chevron\";\n\nconst maxDist = 100;\n\nclass StationsListCell extends React.Component {\n  showLength() {\n    let dist = this.props.data.dist;\n    if (dist < 1) {\n      dist = dist * 1000 + \" м\";\n    } else dist = Math.round(dist).toFixed() + \" км\";\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignContent: \"space-between\",\n          alignItems: \"center\"\n        }}\n      >\n        {this.props.data.dist <= maxDist && (\n          <div style={{ lineHeight: \"24px\" }}>{dist}</div>\n        )}\n        <Icon24Chevron\n          className=\"Cell__chevron\"\n          style={{ display: \"inline-block\" }}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Cell\n        multiline\n        description={this.props.data.address}\n        asideContent={this.showLength()}\n        onClick={() => this.props.city(this.props.data)}\n        size=\"l\"\n      >\n        <b>{this.props.data.title}</b>\n      </Cell>\n    );\n  }\n}\n\nStationsListCell.propTypes = {\n  data: PropTypes.shape({\n    address: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired\n  })\n};\n\nexport default StationsListCell;\n","function getDistance(lat1, lon1, lat2, lon2) {\n  var R = 6371;\n  var dLat = deg2rad(lat2 - lat1);\n  var dLon = deg2rad(lon2 - lon1);\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n\n  return Number(d.toFixed(2));\n}\n\nfunction deg2rad(degrees) {\n  const radians = degrees * (Math.PI / 180);\n\n  return radians;\n}\n\nexport default { getDistance };\n","import React from \"react\";\nimport {\n  Spinner,\n  Panel,\n  List,\n  PanelHeader,\n  HeaderButton,\n  View,\n  Search,\n  Div,\n  platform,\n  IOS,\n  Cell\n} from \"@vkontakte/vkui\";\nimport StationsListCell from \"../components/StationsListCell\";\nimport Loc from \"../resources/Loc\";\nimport Distance from \"../services/Distance\";\nimport DataManager from \"../services/DataManager\";\n\nimport Icon24Settings from \"@vkontakte/icons/dist/24/settings\";\n\nconst osname = platform();\n\nclass StationsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stations: [],\n      search: \"\"\n    };\n  }\n\n  onSearchChange = search => {\n    this.setState({ search });\n  };\n\n  get stations() {\n    const search = this.state.search.toLowerCase().trim();\n    const filteredStations = this.props.stations.filter(\n      station =>\n        station.title.toLowerCase().indexOf(search) > -1 ||\n        station.address.toLowerCase().indexOf(search) > -1\n    );\n\n    return filteredStations;\n  }\n\n  showPanelHeader() {\n    return (\n      <PanelHeader\n        left={\n          <HeaderButton onClick={() => this.props.history.push(\"findCity\")}>\n            <Icon24Settings />\n          </HeaderButton>\n        }\n      >\n        {Loc.FindStationsTitle}\n      </PanelHeader>\n    );\n  }\n\n  showStations() {\n    let listStations = [];\n\n    if (this.stations.length > 0) {\n      let stations = this.stations.map(station => {\n        if (this.props.geo) {\n          const dist = Distance.getDistance(\n            ...this.props.geo,\n            station.lat,\n            station.lng\n          );\n          station.dist = dist;\n        }\n\n        return station;\n      });\n\n      stations.sort((a, b) => {\n        if (a.dist > b.dist) {\n          return 1;\n        }\n        if (a.dist < b.dist) {\n          return -1;\n        }\n\n        return 0;\n      });\n\n      listStations = stations.map((station, i) => {\n        return (\n          <StationsListCell key={i} data={station} city={this.props.city} />\n        );\n      });\n    }\n\n    return (\n      <React.Fragment>\n        <Search\n          value={this.state.search}\n          onChange={this.onSearchChange}\n          maxLength=\"150\"\n        />\n        {listStations.length > 0 && <List>{listStations}</List>}\n        {listStations.length === 0 && (\n          <Cell>\n            <Div align=\"center\">\n              {osname === IOS\n                ? Loc.NothingFindText\n                : Loc.NothingFindTextAndroid}\n            </Div>\n          </Cell>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  componentDidMount() {\n    if (DataManager.getSearch())\n      this.setState({ search: DataManager.getSearch() });\n  }\n\n  componentWillUnmount() {\n    DataManager.setSearch(this.state.search);\n  }\n\n  showSpinner() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        <Spinner size=\"medium\" style={{ marginTop: 20 }} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <View popout={this.props.popout} activePanel=\"stationsList\">\n        <Panel id=\"stationsList\">\n          {this.showPanelHeader()}\n          {this.props.stations.length > 0 && this.showStations()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nexport default StationsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Panel,\n  PanelHeader,\n  HeaderButton,\n  View,\n  Alert,\n  Spinner\n} from \"@vkontakte/vkui\";\nimport VKConnect from \"@vkontakte/vkui-connect\";\nimport { Map, Placemark, Clusterer } from \"react-yandex-maps\";\nimport DataManager from \"../services/DataManager\";\nimport Loc from \"../resources/Loc\";\nimport Geocode from \"../services/Geocode\";\n\nimport Icon24Locate from \"@vkontakte/icons/dist/24/locate\";\n\nclass StationsMap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      styleMap: {\n        display: \"flex\",\n        flexGrow: \"1\",\n        width: \"100%\"\n      },\n      map: null,\n      geo: \"\",\n      zoom: 12,\n      isLoading: true,\n      isLoadingMap: true,\n      userGeo: \"\",\n      isPanning: false,\n      stations: \"\"\n    };\n  }\n\n  geoSubscribe = async e => {\n    switch (e.detail.type) {\n      case \"VKWebAppGeodataResult\":\n        if (e.detail.data.available) {\n          DataManager.setGeo(e.detail.data.lat, e.detail.data.long);\n          const city = await Geocode.geoToCity(DataManager.getGeo());\n          DataManager.setUserCity(city);\n          this.setState({ userGeo: DataManager.getGeo(), isPanning: true });\n          this.state.map\n            .panTo(this.state.userGeo)\n            .then(() => this.setState({ isPanning: false }));\n        } else {\n          DataManager.setGeo(null, null);\n          this.setState({ userGeo: DataManager.getGeo() });\n          DataManager.setUserCity(null);\n          this.setState({\n            popout: (\n              <Alert\n                actions={[\n                  {\n                    title: \"Ок\",\n                    autoclose: true,\n                    style: \"primary\"\n                  }\n                ]}\n                onClose={() => this.setState({ popout: null })}\n              >\n                <h2>Геопозиция отключена</h2>\n                <p>Включите геопозицию в настройках Вашего телефона</p>\n              </Alert>\n            )\n          });\n        }\n        break;\n      case \"VKWebAppGeodataFailed\":\n        this.setState({\n          popout: (\n            <Alert\n              actions={[\n                {\n                  title: \"Ок\",\n                  autoclose: true,\n                  style: \"primary\"\n                }\n              ]}\n              onClose={() => this.setState({ popout: null })}\n            >\n              <p>Не удалось получить геопозицию</p>\n            </Alert>\n          )\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  onClickHeaderButton = () => {\n    VKConnect.subscribe(this.geoSubscribe);\n    VKConnect.send(\"VKWebAppGetGeodata\", {});\n  };\n\n  showPanelHeader() {\n    return (\n      <PanelHeader\n        left={\n          <HeaderButton onClick={this.onClickHeaderButton}>\n            <Icon24Locate />\n          </HeaderButton>\n        }\n      >\n        {Loc.FindStationsTitle}\n      </PanelHeader>\n    );\n  }\n\n  setMapRef = map => {\n    if (this._isMounted) this.setState({ map });\n  };\n\n  setPlacemarks() {\n    const stations = this.props.stations.map((station, i) => (\n      <Placemark\n        key={i}\n        onClick={() => {\n          this.props.city(station);\n        }}\n        geometry={[station.lat, station.lng]}\n        options={{\n          iconLayout: \"default#image\",\n          iconImageHref:\n            \"https://raw.githubusercontent.com/iPagar/donate-blood/master/src/img/heart.png\",\n          iconImageSize: [36, 36],\n          iconImageOffset: [-18, -36]\n        }}\n      />\n    ));\n\n    this.setState({ Stations: stations });\n  }\n\n  mapOnLoad = () => {\n    this.setState({ isLoadingMap: false });\n  };\n\n  showMap() {\n    const { geo, zoom, Stations, isLoading, isLoadingMap } = this.state;\n\n    const mapState = {\n      center: geo,\n      zoom: zoom\n    };\n    const mapOptions = {\n      yandexMapDisablePoiInteractivity: true,\n      suppressMapOpenBlock: true\n    };\n\n    return (\n      <div style={this.state.styleMap}>\n        {isLoadingMap && this.showSpinner()}\n        {!isLoading && (\n          <Map\n            style={this.state.styleMap}\n            defaultState={mapState}\n            defaultOptions={mapOptions}\n            instanceRef={this.setMapRef}\n            onLoad={this.mapOnLoad}\n          >\n            <Clusterer\n              options={{\n                preset: \"islands#redClusterIcons\",\n                clusterIconColor: \"#f60808\",\n                groupByCoordinates: false,\n                useMapMargin: true,\n                gridSize: 128,\n                margin: 10,\n                hasBalloon: false,\n                hasHint: false,\n                zoomMargin: 36\n              }}\n            >\n              {Stations.map(station => station)}\n            </Clusterer>\n            <Placemark\n              geometry={this.state.userGeo}\n              options={{\n                preset: \"islands#geolocationIcon\",\n                iconColor: \"#f60808\"\n              }}\n            />\n          </Map>\n        )}\n      </div>\n    );\n  }\n\n  async setGeo() {\n    this.setState({ isLoading: true });\n    const actualMapState = DataManager.getMapState();\n\n    if (actualMapState) {\n      //не меняем карту\n      this.setState({ geo: actualMapState.center });\n      this.setState({ zoom: actualMapState.zoom });\n    } else if (DataManager.getCity().title === DataManager.getUserCity()) {\n      //показываем геопозицию пользователя\n      this.setState({ geo: DataManager.getGeo(), zoom: 14 });\n    } else {\n      //показываем на центр города\n      let geo = await Geocode.addressToGeo(DataManager.getCity().title);\n\n      this.setState({\n        geo,\n        zoom: 12\n      });\n    }\n    this.setState({ userGeo: DataManager.getGeo(), isLoading: false });\n  }\n\n  setMap() {\n    if (this.state.map) {\n      let mapState = {\n        center: this.state.map.getCenter(),\n        zoom: this.state.map.getZoom()\n      };\n\n      DataManager.setMapState(mapState);\n    }\n  }\n\n  showSpinner() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          margin: \"auto\",\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0\n        }}\n      >\n        <Spinner size=\"medium\" />\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    VKConnect.unsubscribe(this.geoSubscribe);\n    this.setMap();\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setGeo();\n    this.setPlacemarks();\n  }\n\n  render() {\n    return (\n      <View popout={this.state.popout} activePanel=\"stationsMap\">\n        <Panel id=\"stationsMap\" centered>\n          {this.showPanelHeader()}\n          {this.showMap()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nStationsMap.propTypes = {\n  stations: PropTypes.array.isRequired\n};\n\nexport default StationsMap;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Cell, Div } from \"@vkontakte/vkui\";\n\nimport Icon16Dropdown from \"@vkontakte/icons/dist/16/dropdown\";\n\nclass Topic extends React.Component {\n  state = {\n    visibleText: false,\n    icon: (\n      <Icon16Dropdown\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }}\n      />\n    ),\n    text: null\n  };\n\n  handleTitleClick = e => {\n    // e.currentTarget.children[0].className = `Tappable Tappable--ios Cell__in Tappable--inactive`;\n    // console.log(e.currentTarget.children[0].className);\n    let icon = (\n      <Icon16Dropdown\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          transform: \"rotate(180deg)\"\n        }}\n      />\n    );\n    let text = this.props.data.text;\n\n    if (this.state.visibleText) {\n      icon = (\n        <Icon16Dropdown\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          }}\n        />\n      );\n\n      text = null;\n    }\n\n    this.setState({ visibleText: !this.state.visibleText, text, icon });\n  };\n\n  showText() {\n    const text = this.state.text.map((textData, i) => (\n      <Div key={i}>{this.state.text[i]}</Div>\n    ));\n\n    return text;\n  }\n\n  render() {\n    const { title } = this.props.data;\n    return (\n      <div>\n        <Cell multiline size=\"l\" onClick={this.handleTitleClick}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            }}\n          >\n            <b>{title}</b> {this.state.icon}\n          </div>\n        </Cell>\n        {this.state.visibleText && this.showText()}\n      </div>\n    );\n  }\n}\n\nTopic.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    text: PropTypes.array.isRequired\n  })\n};\n\nexport default Topic;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Topic from \"../components/Topic\";\nimport Topics from \"../resources/Topics\";\nimport { Panel, PanelHeader, Group, List, View } from \"@vkontakte/vkui\";\n\nimport Loc from \"../resources/Loc\";\n\nclass About extends React.Component {\n  showTopics() {\n    const topics = Topics.map((topic, i) => {\n      return <Topic key={i} data={topic} />;\n    });\n    return (\n      <Group>\n        <List>{topics}</List>\n      </Group>\n    );\n  }\n\n  showPanelHeader() {\n    return <PanelHeader>{Loc.SettingsAboutTitle}</PanelHeader>;\n  }\n\n  render() {\n    return (\n      <View activePanel=\"aboutDonationPanel\">\n        <Panel id=\"aboutDonationPanel\">\n          {this.showPanelHeader()}\n          {this.showTopics()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nAbout.propTypes = {\n  welcome: PropTypes.bool\n};\n\nexport default About;\n","import React from \"react\";\nimport VKConnect from \"@vkontakte/vkui-connect\";\nimport DataManager from \"../services/DataManager\";\nimport Database from \"../services/Database\";\nimport Geocode from \"../services/Geocode\";\nimport Loc from \"../resources/Loc\";\nimport {\n  Epic,\n  Tabbar,\n  TabbarItem,\n  ScreenSpinner,\n  Alert\n} from \"@vkontakte/vkui\";\nimport Icon28Place from \"@vkontakte/icons/dist/28/place\";\nimport Icon28Search from \"@vkontakte/icons/dist/28/search\";\nimport Icon28HelpOutline from \"@vkontakte/icons/dist/28/help_outline\";\n\nimport StationsList from \"./StationsList\";\nimport StationsMap from \"./StationsMap\";\nimport AboutDonation from \"./AboutDonation\";\n\n// res.VKWebAppGetUserInfo.data = {\n//   type: \"VKWebAppGeodataResult\",\n//   data: {\n//     available: 1,\n//     lat: \"55.86647\",\n//     long: \"38.443\"\n//   }\n// };\n\nclass FindStations extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeView: \"findStations\",\n      activeStory: \"stationsList\",\n      isLoading: false,\n      styleTabButton: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      stations: [],\n      popout: null\n    };\n  }\n\n  onStoryChange = e => {\n    this.setState({ activeStory: e.currentTarget.dataset.story });\n    this.props.history.replace(\"?\" + e.currentTarget.dataset.story);\n  };\n\n  showTabbar = () => {\n    return (\n      <Tabbar>\n        <TabbarItem\n          onClick={this.onStoryChange}\n          selected={this.state.activeStory === \"stationsList\"}\n          data-story=\"stationsList\"\n        >\n          <div style={this.state.styleTabButton}>\n            <Icon28Search />\n          </div>\n        </TabbarItem>\n        <TabbarItem\n          onClick={this.onStoryChange}\n          selected={this.state.activeStory === \"stationsMap\"}\n          data-story=\"stationsMap\"\n        >\n          <div style={this.state.styleTabButton}>\n            <Icon28Place />\n          </div>\n        </TabbarItem>\n        <TabbarItem\n          onClick={this.onStoryChange}\n          selected={this.state.activeStory === \"aboutDonation\"}\n          data-story=\"aboutDonation\"\n        >\n          <div style={this.state.styleTabButton}>\n            <Icon28HelpOutline />\n          </div>\n        </TabbarItem>\n      </Tabbar>\n    );\n  };\n\n  async setCity() {\n    this.setState({ isLoading: true, popout: <ScreenSpinner /> });\n\n    const city = await Geocode.geoToCity(DataManager.getGeo());\n    DataManager.setUserCity(city);\n    const cities = await Database.getCities(DataManager.getUserCity());\n    if (cities.length > 0) {\n      const stations = await Database.getStations(cities[0]);\n\n      if (stations.length > 0) {\n        DataManager.setCity(cities[0]);\n        DataManager.setStations(stations);\n        this.setState({ stations });\n        this.setState({ isLoading: false, popout: null });\n      } else {\n        const center = await Geocode.getProvincyCenter(DataManager.getGeo());\n        const cities = await Database.getCities(center);\n        const stations = await Database.getStations(cities[0]);\n\n        if (cities.length > 0 && stations.length > 0) {\n          DataManager.setCity(cities[0]);\n          DataManager.setStations(stations);\n          this.setState({ stations });\n          this.setState({ isLoading: false, popout: null });\n        } else {\n          this.openEmptySheet(Loc.EmptySheetTitle);\n        }\n      }\n    } else this.openEmptySheet(Loc.EmptySheetTitle);\n  }\n\n  setStations = () => {\n    this.setState({\n      stations: DataManager.getStations()\n    });\n  };\n\n  geoSubscribe = e => {\n    switch (e.detail.type) {\n      case \"VKWebAppGeodataResult\":\n        if (e.detail.data.available) {\n          DataManager.setGeo(e.detail.data.lat, e.detail.data.long);\n\n          this.setCity();\n        } else this.openEmptySheet(Loc.GetGeoError);\n        break;\n      case \"VKWebAppGeodataFailed\":\n        this.openEmptySheet(Loc.GetGeoError);\n        break;\n      default:\n        break;\n    }\n  };\n\n  getCity() {\n    if (DataManager.getCity() === null) {\n      VKConnect.subscribe(this.geoSubscribe);\n      VKConnect.send(\"VKWebAppGetGeodata\", {});\n    } else {\n      this.setStations();\n    }\n  }\n\n  openEmptySheet(text) {\n    const { history } = this.props;\n\n    if (this._isMounted)\n      this.setState({\n        popout: (\n          <Alert\n            actions={[\n              {\n                title: Loc.EmptySheetActionTitle,\n                autoclose: true,\n                style: \"default\"\n              }\n            ]}\n            onClose={() => {\n              this.setState({ popout: null });\n              history.replace(\"findCityNecessarily\");\n            }}\n          >\n            <h2>{text}</h2>\n          </Alert>\n        )\n      });\n  }\n\n  city = city => {\n    DataManager.setStation(city);\n    this.props.history.push(\"station\");\n  };\n\n  componentWillUnmount() {\n    VKConnect.unsubscribe(this.geoSubscribe);\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    if (this.props.location.search)\n      this.setState({ activeStory: this.props.location.search.slice(1) });\n\n    this.getCity();\n  }\n\n  render() {\n    return (\n      <Epic activeStory={this.state.activeStory} tabbar={this.showTabbar()}>\n        <StationsList\n          popout={this.state.popout}\n          id=\"stationsList\"\n          history={this.props.history}\n          stations={this.state.stations}\n          city={this.city}\n          geo={DataManager.getGeo()}\n        />\n        <StationsMap\n          popout={this.state.popout}\n          id=\"stationsMap\"\n          stations={this.state.stations}\n          city={this.city}\n        />\n        <AboutDonation popout={this.state.popout} id=\"aboutDonation\" />\n      </Epic>\n    );\n  }\n}\n\nFindStations.propTypes = {};\n\nexport default FindStations;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Cell } from \"@vkontakte/vkui\";\n\nclass FindCityCell extends React.Component {\n  onClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  render() {\n    let description;\n    if (this.props.data.region) description = this.props.data.region.title;\n    return (\n      <Cell description={description} onClick={this.onClick}>\n        {!description && (\n          <div style={{ lineHeight: \"39px\" }}>{this.props.data.title}</div>\n        )}\n        {description && this.props.data.title}\n      </Cell>\n    );\n  }\n}\n\nFindCityCell.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired\n  })\n};\n\nexport default FindCityCell;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Database from \"../services/Database\";\nimport FindCityCell from \"../components/FindCityCell\";\nimport DataManager from \"../services/DataManager\";\nimport Loc from \"../resources/Loc\";\nimport {\n  Panel,\n  PanelHeader,\n  HeaderButton,\n  platform,\n  IOS,\n  Search,\n  List,\n  Spinner,\n  Div,\n  View,\n  Cell,\n  Alert,\n  ScreenSpinner\n} from \"@vkontakte/vkui\";\n\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\nconst osname = platform();\n\nclass FindCity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      isLoading: false,\n      cities: [],\n      popout: null\n    };\n  }\n\n  onChange = async search => {\n    if (this._isMounted) {\n      this.setState({ search });\n      await this.updateCities();\n    }\n  };\n\n  async updateCities() {\n    await this.setState({ isLoading: true });\n    const { search } = this.state;\n    const cities = await Database.getCities(search);\n\n    if (search === this.state.search)\n      await this.setState({ cities, isLoading: false });\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.updateCities();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  showSpinner() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        <Spinner size=\"medium\" style={{ marginTop: 20 }} />\n      </div>\n    );\n  }\n\n  onCellClick = async data => {\n    this.setState({ popout: <ScreenSpinner /> });\n    const stations = await Database.getStations(data);\n\n    if (stations.length > 0) {\n      if (this._isMounted) {\n        DataManager.setCity(data);\n        DataManager.setStations(stations);\n        this.setState({ popout: null });\n      }\n      if (this.props.necessarily) this.props.history.push(\"findStations\");\n      else this.props.history.goBack();\n    } else this.openEmptySheet(Loc.EmptySheetTitle);\n  };\n\n  openEmptySheet(text) {\n    if (this._isMounted)\n      this.setState({\n        popout: (\n          <Alert\n            actions={[\n              {\n                title: Loc.EmptySheetActionTitle,\n                autoclose: true,\n                style: \"default\"\n              }\n            ]}\n            onClose={() => {\n              this.setState({ popout: null });\n            }}\n          >\n            <h2>{text}</h2>\n          </Alert>\n        )\n      });\n  }\n\n  showCities() {\n    const listCities = this.state.cities.map(city => {\n      return (\n        <FindCityCell key={city.id} data={city} onClick={this.onCellClick} />\n      );\n    });\n\n    return (\n      <React.Fragment>\n        {listCities.length > 0 && <List>{listCities}</List>}\n        {listCities.length === 0 && (\n          <Cell>\n            <Div align=\"center\">\n              {osname === IOS\n                ? Loc.NothingFindText\n                : Loc.NothingFindTextAndroid}\n            </Div>\n          </Cell>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showSearch() {\n    return (\n      <Search\n        value={this.state.search}\n        onChange={this.onChange}\n        maxLength=\"30\"\n      />\n    );\n  }\n\n  showPanelHeader() {\n    let headerButton = (\n      <HeaderButton onClick={this.props.history.goBack}>\n        {osname === IOS ? \"Отмена\" : <Icon24Back />}\n      </HeaderButton>\n    );\n\n    if (this.props.necessarily) headerButton = \" \";\n\n    return (\n      <PanelHeader noShadow left={headerButton}>\n        {Loc.FindCityTitle}\n      </PanelHeader>\n    );\n  }\n\n  render() {\n    return (\n      <View activePanel=\"findCityPanel\" popout={this.state.popout}>\n        <Panel id=\"findCityPanel\">\n          {this.showPanelHeader()}\n          {this.showSearch()}\n          {!this.state.isLoading && this.showCities()}\n          {this.state.isLoading && this.showSpinner()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nFindCity.propTypes = {\n  history: PropTypes.object.isRequired\n};\n\nexport default FindCity;\n","import React from \"react\";\nimport { Map, Placemark } from \"react-yandex-maps\";\nimport {\n  Panel,\n  HeaderButton,\n  PanelHeader,\n  View,\n  Group,\n  Cell,\n  List,\n  Link,\n  Spinner,\n  platform,\n  Header,\n  IOS\n} from \"@vkontakte/vkui\";\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\nimport Loc from \"../resources/Loc\";\nimport DataManager from \"../services/DataManager\";\n\nimport { findNumbers } from \"libphonenumber-js\";\n\nimport Icon24Place from \"@vkontakte/icons/dist/24/place\";\nimport Icon24Globe from \"@vkontakte/icons/dist/24/globe\";\nimport Icon24Phone from \"@vkontakte/icons/dist/24/phone\";\nimport Icon24Recent from \"@vkontakte/icons/dist/24/recent\";\n\nconst osname = platform();\n\nclass Station extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      styleMap: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignContent: \"space-between\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"300px\"\n      },\n      isLoadingMap: true,\n      station: DataManager.getStation()\n    };\n  }\n\n  showPanelHeader() {\n    const { history } = this.props;\n\n    return (\n      <PanelHeader\n        left={\n          <HeaderButton onClick={history.goBack}>\n            {osname === IOS ? \"Отмена\" : <Icon24Back />}\n          </HeaderButton>\n        }\n      >\n        {Loc.StationTitle}\n      </PanelHeader>\n    );\n  }\n\n  mapOnLoad = () => {\n    this.setState({ isLoadingMap: false });\n  };\n\n  showMap() {\n    const zoom = 16;\n\n    const mapState = {\n      center: [this.state.station.lat, this.state.station.lng],\n      zoom: zoom\n    };\n\n    const mapOptions = {\n      yandexMapDisablePoiInteractivity: true,\n      suppressMapOpenBlock: true\n    };\n\n    return (\n      <div>\n        {this.state.isLoadingMap && this.showSpinner()}\n        <Map\n          defaultOptions={mapOptions}\n          style={this.state.styleMap}\n          defaultState={mapState}\n          onLoad={this.mapOnLoad}\n        >\n          <Placemark\n            geometry={[this.state.station.lat, this.state.station.lng]}\n            options={{\n              iconLayout: \"default#image\",\n              iconImageHref:\n                \"https://raw.githubusercontent.com/iPagar/donate-blood/master/src/img/heart.png\",\n              iconImageSize: [36, 36],\n              iconImageOffset: [-18, -36]\n            }}\n          />\n          <Placemark\n            geometry={DataManager.getGeo()}\n            options={{\n              preset: \"islands#geolocationIcon\",\n              iconColor: \"#f60808\"\n            }}\n          />\n        </Map>\n      </div>\n    );\n  }\n\n  showSite() {\n    return (\n      <React.Fragment>\n        {this.state.station.site.length > 0 && (\n          <Group title=\"Сайт\">\n            <List>\n              <Cell multiline before={<Icon24Globe />}>\n                <Link\n                  href={\n                    this.state.station.site.includes(\"http\")\n                      ? `${this.state.station.site}`\n                      : `//${this.state.station.site}`\n                  }\n                  target=\"_blank\"\n                >\n                  {this.state.station.site}\n                </Link>\n              </Cell>\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showEmail() {\n    return (\n      <React.Fragment>\n        {this.state.station.email.length > 0 && (\n          <Group title=\"E-mail\">\n            <List>\n              <Cell multiline before={<Icon24Globe />}>\n                <Link href={this.state.station.site}>\n                  {this.state.station.site}\n                </Link>\n              </Cell>\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showWorkTime() {\n    return (\n      <React.Fragment>\n        {this.state.station.worktime.length > 0 && (\n          <Group title=\"Время работы\">\n            <List>\n              <Cell multiline before={<Icon24Recent />}>\n                {this.state.station.worktime}\n              </Cell>\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showTel() {\n    let tels = [];\n    if (this.state.station.phones.length > 0)\n      findNumbers(this.state.station.phones, \"RU\", {\n        v2: true\n      }).map(tel => tels.push(tel.number.formatNational()));\n\n    return (\n      <React.Fragment>\n        {tels.length > 0 && (\n          <Group title=\"Контакты\">\n            <List>\n              {tels.map((tel, i) => (\n                <Cell key={i} before={<Icon24Phone />}>\n                  <Link href={`tel:${tel}`}>{tel}</Link>\n                </Cell>\n              ))}\n            </List>\n          </Group>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  showAddress() {\n    return (\n      <Group>\n        <Header level=\"2\">\n          <div style={{ whiteSpace: \"normal\" }}>{this.state.station.title}</div>\n        </Header>\n        <List>\n          <Cell multiline before={<Icon24Place />}>\n            <Link\n              href={`//maps.yandex.ru/?text=${this.state.station.city.title}, ${\n                this.state.station.address\n              }`}\n            >\n              {this.state.station.address}\n            </Link>\n          </Cell>\n        </List>\n      </Group>\n    );\n  }\n\n  showInfo() {\n    return (\n      <React.Fragment>\n        {this.showAddress()}\n        {this.showWorkTime()}\n        {this.showTel()}\n        {this.showSite()}\n      </React.Fragment>\n    );\n  }\n\n  showSpinner() {\n    return (\n      <div style={this.state.styleMap}>\n        <Spinner size=\"medium\" />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <View activePanel=\"station\" popout={this.state.popout}>\n        <Panel id=\"station\">\n          {this.showPanelHeader()}\n          {this.showMap()}\n          {this.showInfo()}\n        </Panel>\n      </View>\n    );\n  }\n}\n\nexport default Station;\n","import React from \"react\";\nimport VKConnect from \"@vkontakte/vkui-connect\";\nimport { Root, View } from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport \"./resources/ui.css\";\nimport { Route, withRouter } from \"react-router-dom\";\n\nimport FindStations from \"./panels/FindStations\";\nimport FindCity from \"./panels/FindCity\";\nimport Station from \"./panels/Station\";\n\nclass App extends React.Component {\n  state = { isLoading: false };\n\n  getTheme() {\n    VKConnect.subscribe(e => {\n      switch (e.detail.type) {\n        case \"VKWebAppUpdateConfig\":\n          let schemeAttribute = document.createAttribute(\"scheme\");\n          schemeAttribute.value = e.detail.data.scheme\n            ? e.detail.data.scheme\n            : \"client_light\";\n          document.body.attributes.setNamedItem(schemeAttribute);\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  async setInitialView() {\n    await this.setState({ isLoading: true });\n\n    this.props.history.replace(\"findStations\");\n\n    await this.setState({ isLoading: false });\n  }\n\n  componentDidMount() {\n    this.setInitialView();\n    this.getTheme();\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    const activeView = this.props.location.pathname.slice(1);\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        {!isLoading && (\n          <Root activeView={activeView}>\n            <Route id=\"findStations\" component={FindStations} />\n            <Route id=\"station\" component={Station} />\n            <Route id=\"findCity\" component={FindCity} />\n            <Route\n              id=\"findCityNecessarily\"\n              render={() => (\n                <View activePanel=\"findCityPanel\">\n                  <FindCity\n                    id=\"findCityPanel\"\n                    history={this.props.history}\n                    necessarily\n                  />\n                </View>\n              )}\n            />\n          </Root>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import \"core-js/es6/map\";\nimport \"core-js/es6/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport connect from \"@vkontakte/vkui-connect\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { YMaps } from \"react-yandex-maps\";\n\n// Init VK App\nconnect.send(\"VKWebAppInit\", {});\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<YMaps>\n\t\t\t<App />\n\t\t</YMaps>\n\t</HashRouter>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}